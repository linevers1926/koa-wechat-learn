{"version":3,"sources":["sax.js"],"names":[],"mappings":"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","file":"sax-compiled.js","sourcesContent":[";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // character classes and tokens\n  var whitespace = '\\r\\n\\t '\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var number = '0124356789'\n  var letter = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\n  // (Letter | \"_\" | \":\")\n  var quote = '\\'\"'\n  var attribEnd = whitespace + '>'\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // turn all the string character sets into character class objects.\n  whitespace = charClass(whitespace)\n  number = charClass(number)\n  letter = charClass(letter)\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040\\.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040\\.\\d-]/\n\n  quote = charClass(quote)\n  attribEnd = charClass(attribEnd)\n\n  function charClass (str) {\n    return str.split('').reduce(function (s, c) {\n      s[c] = true\n      return s\n    }, {})\n  }\n\n  function isRegExp (c) {\n    return Object.prototype.toString.call(c) === '[object RegExp]'\n  }\n\n  function is (charclass, c) {\n    return isRegExp(charclass) ? !!c.match(charclass) : charclass[c]\n  }\n\n  function not (charclass, c) {\n    return !is(charclass, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (not(whitespace, c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n      if (!c) {\n        break\n      }\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (not(whitespace, c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (is(whitespace, c)) {\n            // wait for it...\n          } else if (is(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (is(quote, c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (is(quote, c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (is(quote, c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (is(whitespace, c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && is(whitespace, c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (is(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (not(whitespace, c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (is(whitespace, c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (is(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (is(whitespace, c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (is(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (is(whitespace, c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (is(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (is(whitespace, c)) {\n            continue\n          } else if (is(quote, c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (is(whitespace, c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (is(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (not(attribEnd, c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (is(whitespace, c)) {\n              continue\n            } else if (not(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (is(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (not(whitespace, c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (is(whitespace, c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (is(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n"]}