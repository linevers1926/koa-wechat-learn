{"version":3,"sources":["XMLDTDAttList.js"],"names":[],"mappings":"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","file":"XMLDTDAttList-compiled.js","sourcesContent":["// Generated by CoffeeScript 1.9.1\n(function() {\n  var XMLDTDAttList, create;\n\n  create = require('lodash/create');\n\n  module.exports = XMLDTDAttList = (function() {\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      this.stringify = parent.stringify;\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name\");\n      }\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name\");\n      }\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type\");\n      }\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default\");\n      }\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT\");\n      }\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT\");\n      }\n      this.elementName = this.stringify.eleName(elementName);\n      this.attributeName = this.stringify.attName(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      this.defaultValueType = defaultValueType;\n    }\n\n    XMLDTDAttList.prototype.toString = function(options, level) {\n      var indent, newline, offset, pretty, r, ref, ref1, ref2, space;\n      pretty = (options != null ? options.pretty : void 0) || false;\n      indent = (ref = options != null ? options.indent : void 0) != null ? ref : '  ';\n      offset = (ref1 = options != null ? options.offset : void 0) != null ? ref1 : 0;\n      newline = (ref2 = options != null ? options.newline : void 0) != null ? ref2 : '\\n';\n      level || (level = 0);\n      space = new Array(level + offset + 1).join(indent);\n      r = '';\n      if (pretty) {\n        r += space;\n      }\n      r += '<!ATTLIST ' + this.elementName + ' ' + this.attributeName + ' ' + this.attributeType;\n      if (this.defaultValueType !== '#DEFAULT') {\n        r += ' ' + this.defaultValueType;\n      }\n      if (this.defaultValue) {\n        r += ' \"' + this.defaultValue + '\"';\n      }\n      r += '>';\n      if (pretty) {\n        r += newline;\n      }\n      return r;\n    };\n\n    return XMLDTDAttList;\n\n  })();\n\n}).call(this);\n"]}