{"version":3,"sources":["XMLStringifier.js"],"names":[],"mappings":"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","file":"XMLStringifier-compiled.js","sourcesContent":["// Generated by CoffeeScript 1.9.1\n(function() {\n  var XMLStringifier,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLStringifier = (function() {\n    function XMLStringifier(options) {\n      this.assertLegalChar = bind(this.assertLegalChar, this);\n      var key, ref, value;\n      this.allowSurrogateChars = options != null ? options.allowSurrogateChars : void 0;\n      this.noDoubleEncoding = options != null ? options.noDoubleEncoding : void 0;\n      ref = (options != null ? options.stringify : void 0) || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n    }\n\n    XMLStringifier.prototype.eleName = function(val) {\n      val = '' + val || '';\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.eleText = function(val) {\n      val = '' + val || '';\n      return this.assertLegalChar(this.elEscape(val));\n    };\n\n    XMLStringifier.prototype.cdata = function(val) {\n      val = '' + val || '';\n      if (val.match(/]]>/)) {\n        throw new Error(\"Invalid CDATA text: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.comment = function(val) {\n      val = '' + val || '';\n      if (val.match(/--/)) {\n        throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.raw = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.attName = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.attValue = function(val) {\n      val = '' + val || '';\n      return this.attEscape(val);\n    };\n\n    XMLStringifier.prototype.insTarget = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.insValue = function(val) {\n      val = '' + val || '';\n      if (val.match(/\\?>/)) {\n        throw new Error(\"Invalid processing instruction value: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlVersion = function(val) {\n      val = '' + val || '';\n      if (!val.match(/1\\.[0-9]+/)) {\n        throw new Error(\"Invalid version number: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlEncoding = function(val) {\n      val = '' + val || '';\n      if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-]|-)*$/)) {\n        throw new Error(\"Invalid encoding: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlStandalone = function(val) {\n      if (val) {\n        return \"yes\";\n      } else {\n        return \"no\";\n      }\n    };\n\n    XMLStringifier.prototype.dtdPubID = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdSysID = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdElementValue = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttType = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttDefault = function(val) {\n      if (val != null) {\n        return '' + val || '';\n      } else {\n        return val;\n      }\n    };\n\n    XMLStringifier.prototype.dtdEntityValue = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdNData = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.convertAttKey = '@';\n\n    XMLStringifier.prototype.convertPIKey = '?';\n\n    XMLStringifier.prototype.convertTextKey = '#text';\n\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\n\n    XMLStringifier.prototype.convertCommentKey = '#comment';\n\n    XMLStringifier.prototype.convertRawKey = '#raw';\n\n    XMLStringifier.prototype.assertLegalChar = function(str) {\n      var chars, chr;\n      if (this.allowSurrogateChars) {\n        chars = /[\\u0000-\\u0008\\u000B-\\u000C\\u000E-\\u001F\\uFFFE-\\uFFFF]/;\n      } else {\n        chars = /[\\u0000-\\u0008\\u000B-\\u000C\\u000E-\\u001F\\uD800-\\uDFFF\\uFFFE-\\uFFFF]/;\n      }\n      chr = str.match(chars);\n      if (chr) {\n        throw new Error(\"Invalid character (\" + chr + \") in string: \" + str + \" at index \" + chr.index);\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.elEscape = function(str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\n    };\n\n    XMLStringifier.prototype.attEscape = function(str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;');\n    };\n\n    return XMLStringifier;\n\n  })();\n\n}).call(this);\n"]}