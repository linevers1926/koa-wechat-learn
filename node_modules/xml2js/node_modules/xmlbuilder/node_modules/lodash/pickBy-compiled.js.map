{"version":3,"sources":["pickBy.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,aAAR,CAAf;IACI,eAAe,QAAQ,iBAAR,CADnB;IAEI,aAAa,QAAQ,eAAR,CAFjB;IAGI,eAAe,QAAQ,iBAAR,CAHnB;;;;;;;;;;;;;;;;;;;;AAuBA,SAAS,MAAT,CAAgB,MAAhB,EAAwB,SAAxB,EAAmC;AACjC,MAAI,UAAU,IAAd,EAAoB;AAClB,WAAO,EAAP;AACD;AACD,MAAI,QAAQ,SAAS,aAAa,MAAb,CAAT,EAA+B,UAAS,IAAT,EAAe;AACxD,WAAO,CAAC,IAAD,CAAP;AACD,GAFW,CAAZ;AAGA,cAAY,aAAa,SAAb,CAAZ;AACA,SAAO,WAAW,MAAX,EAAmB,KAAnB,EAA0B,UAAS,KAAT,EAAgB,IAAhB,EAAsB;AACrD,WAAO,UAAU,KAAV,EAAiB,KAAK,CAAL,CAAjB,CAAP;AACD,GAFM,CAAP;AAGD;;AAED,OAAO,OAAP,GAAiB,MAAjB","file":"pickBy-compiled.js","sourcesContent":["var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    basePickBy = require('./_basePickBy'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nmodule.exports = pickBy;\n"]}