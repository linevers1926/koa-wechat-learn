{"version":3,"sources":["_baseMerge.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,QAAQ,UAAR,CAAZ;IACI,mBAAmB,QAAQ,qBAAR,CADvB;IAEI,UAAU,QAAQ,YAAR,CAFd;IAGI,gBAAgB,QAAQ,kBAAR,CAHpB;IAII,WAAW,QAAQ,YAAR,CAJf;IAKI,SAAS,QAAQ,UAAR,CALb;;;;;;;;;;;;;AAkBA,SAAS,SAAT,CAAmB,MAAnB,EAA2B,MAA3B,EAAmC,QAAnC,EAA6C,UAA7C,EAAyD,KAAzD,EAAgE;AAC9D,MAAI,WAAW,MAAf,EAAuB;AACrB;AACD;AACD,UAAQ,MAAR,EAAgB,UAAS,QAAT,EAAmB,GAAnB,EAAwB;AACtC,QAAI,SAAS,QAAT,CAAJ,EAAwB;AACtB,gBAAU,QAAQ,IAAI,KAAJ,EAAlB;AACA,oBAAc,MAAd,EAAsB,MAAtB,EAA8B,GAA9B,EAAmC,QAAnC,EAA6C,SAA7C,EAAwD,UAAxD,EAAoE,KAApE;AACD,KAHD,MAIK;AACH,UAAI,WAAW,aACX,WAAW,OAAO,GAAP,CAAX,EAAwB,QAAxB,EAAmC,MAAM,EAAzC,EAA8C,MAA9C,EAAsD,MAAtD,EAA8D,KAA9D,CADW,GAEX,SAFJ;;AAIA,UAAI,aAAa,SAAjB,EAA4B;AAC1B,mBAAW,QAAX;AACD;AACD,uBAAiB,MAAjB,EAAyB,GAAzB,EAA8B,QAA9B;AACD;AACF,GAfD,EAeG,MAfH;AAgBD;;AAED,OAAO,OAAP,GAAiB,SAAjB","file":"_baseMerge-compiled.js","sourcesContent":["var Stack = require('./_Stack'),\n    assignMergeValue = require('./_assignMergeValue'),\n    baseFor = require('./_baseFor'),\n    baseMergeDeep = require('./_baseMergeDeep'),\n    isObject = require('./isObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    if (isObject(srcValue)) {\n      stack || (stack = new Stack);\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nmodule.exports = baseMerge;\n"]}