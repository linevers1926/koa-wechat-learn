{"version":3,"sources":["_baseSetToString.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,YAAR,CAAf;IACI,iBAAiB,QAAQ,mBAAR,CADrB;IAEI,WAAW,QAAQ,YAAR,CAFf;;;;;;;;;;AAYA,IAAI,kBAAkB,CAAC,cAAD,GAAkB,QAAlB,GAA6B,UAAS,IAAT,EAAe,MAAf,EAAuB;AACxE,SAAO,eAAe,IAAf,EAAqB,UAArB,EAAiC;AACtC,oBAAgB,IADsB;AAEtC,kBAAc,KAFwB;AAGtC,aAAS,SAAS,MAAT,CAH6B;AAItC,gBAAY;AAJ0B,GAAjC,CAAP;AAMD,CAPD;;AASA,OAAO,OAAP,GAAiB,eAAjB","file":"_baseSetToString-compiled.js","sourcesContent":["var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n"]}