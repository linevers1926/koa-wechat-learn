{"version":3,"sources":["_baseGetTag.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,WAAR,CAAb;IACI,YAAY,QAAQ,cAAR,CADhB;IAEI,iBAAiB,QAAQ,mBAAR,CAFrB;;;AAKA,IAAI,UAAU,eAAd;IACI,eAAe,oBADnB;;;AAIA,IAAI,iBAAiB,SAAS,OAAO,WAAhB,GAA8B,SAAnD;;;;;;;;;AASA,SAAS,UAAT,CAAoB,KAApB,EAA2B;AACzB,QAAI,SAAS,IAAb,EAAmB;AACjB,eAAO,UAAU,SAAV,GAAsB,YAAtB,GAAqC,OAA5C;AACD;AACD,YAAQ,OAAO,KAAP,CAAR;AACA,WAAQ,kBAAkB,kBAAkB,KAArC,GACH,UAAU,KAAV,CADG,GAEH,eAAe,KAAf,CAFJ;AAGD;;AAED,OAAO,OAAP,GAAiB,UAAjB","file":"_baseGetTag-compiled.js","sourcesContent":["var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  value = Object(value);\n  return (symToStringTag && symToStringTag in value)\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n"]}