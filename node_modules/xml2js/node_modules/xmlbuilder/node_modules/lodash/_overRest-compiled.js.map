{"version":3,"sources":["_overRest.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,QAAQ,UAAR,CAAZ;;;AAGA,IAAI,YAAY,KAAK,GAArB;;;;;;;;;;;AAWA,SAAS,QAAT,CAAkB,IAAlB,EAAwB,KAAxB,EAA+B,SAA/B,EAA0C;AACxC,UAAQ,UAAU,UAAU,SAAV,GAAuB,KAAK,MAAL,GAAc,CAArC,GAA0C,KAApD,EAA2D,CAA3D,CAAR;AACA,SAAO,YAAW;AAChB,QAAI,OAAO,SAAX;QACI,QAAQ,CAAC,CADb;QAEI,SAAS,UAAU,KAAK,MAAL,GAAc,KAAxB,EAA+B,CAA/B,CAFb;QAGI,QAAQ,MAAM,MAAN,CAHZ;;AAKA,WAAO,EAAE,KAAF,GAAU,MAAjB,EAAyB;AACvB,YAAM,KAAN,IAAe,KAAK,QAAQ,KAAb,CAAf;AACD;AACD,YAAQ,CAAC,CAAT;AACA,QAAI,YAAY,MAAM,QAAQ,CAAd,CAAhB;AACA,WAAO,EAAE,KAAF,GAAU,KAAjB,EAAwB;AACtB,gBAAU,KAAV,IAAmB,KAAK,KAAL,CAAnB;AACD;AACD,cAAU,KAAV,IAAmB,UAAU,KAAV,CAAnB;AACA,WAAO,MAAM,IAAN,EAAY,IAAZ,EAAkB,SAAlB,CAAP;AACD,GAhBD;AAiBD;;AAED,OAAO,OAAP,GAAiB,QAAjB","file":"_overRest-compiled.js","sourcesContent":["var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n"]}