{"version":3,"sources":["pullAt.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,aAAR,CAAf;IACI,SAAS,QAAQ,WAAR,CADb;IAEI,aAAa,QAAQ,eAAR,CAFjB;IAGI,mBAAmB,QAAQ,qBAAR,CAHvB;IAII,WAAW,QAAQ,aAAR,CAJf;IAKI,UAAU,QAAQ,YAAR,CALd;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,IAAI,SAAS,SAAS,UAAS,KAAT,EAAgB,OAAhB,EAAyB;AAC7C,QAAI,SAAS,SAAS,IAAT,GAAgB,CAAhB,GAAoB,MAAM,MAAvC;QACI,SAAS,OAAO,KAAP,EAAc,OAAd,CADb;;AAGA,eAAW,KAAX,EAAkB,SAAS,OAAT,EAAkB,UAAS,KAAT,EAAgB;AAClD,eAAO,QAAQ,KAAR,EAAe,MAAf,IAAyB,CAAC,KAA1B,GAAkC,KAAzC;AACD,KAFiB,EAEf,IAFe,CAEV,gBAFU,CAAlB;;AAIA,WAAO,MAAP;AACD,CATY,CAAb;;AAWA,OAAO,OAAP,GAAiB,MAAjB","file":"pullAt-compiled.js","sourcesContent":["var arrayMap = require('./_arrayMap'),\n    baseAt = require('./_baseAt'),\n    basePullAt = require('./_basePullAt'),\n    compareAscending = require('./_compareAscending'),\n    flatRest = require('./_flatRest'),\n    isIndex = require('./_isIndex');\n\n/**\n * Removes elements from `array` corresponding to `indexes` and returns an\n * array of removed elements.\n *\n * **Note:** Unlike `_.at`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n * @returns {Array} Returns the new array of removed elements.\n * @example\n *\n * var array = ['a', 'b', 'c', 'd'];\n * var pulled = _.pullAt(array, [1, 3]);\n *\n * console.log(array);\n * // => ['a', 'c']\n *\n * console.log(pulled);\n * // => ['b', 'd']\n */\nvar pullAt = flatRest(function(array, indexes) {\n  var length = array == null ? 0 : array.length,\n      result = baseAt(array, indexes);\n\n  basePullAt(array, arrayMap(indexes, function(index) {\n    return isIndex(index, length) ? +index : index;\n  }).sort(compareAscending));\n\n  return result;\n});\n\nmodule.exports = pullAt;\n"]}