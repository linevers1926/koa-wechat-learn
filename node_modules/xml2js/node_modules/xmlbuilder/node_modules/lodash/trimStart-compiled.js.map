{"version":3,"sources":["trimStart.js"],"names":[],"mappings":"AAAA,IAAI,eAAe,QAAQ,iBAAR,CAAnB;IACI,YAAY,QAAQ,cAAR,CADhB;IAEI,kBAAkB,QAAQ,oBAAR,CAFtB;IAGI,gBAAgB,QAAQ,kBAAR,CAHpB;IAII,WAAW,QAAQ,YAAR,CAJf;;;AAOA,IAAI,cAAc,MAAlB;;;;;;;;;;;;;;;;;;;;;AAqBA,SAAS,SAAT,CAAmB,MAAnB,EAA2B,KAA3B,EAAkC,KAAlC,EAAyC;AACvC,WAAS,SAAS,MAAT,CAAT;AACA,MAAI,WAAW,SAAS,UAAU,SAA9B,CAAJ,EAA8C;AAC5C,WAAO,OAAO,OAAP,CAAe,WAAf,EAA4B,EAA5B,CAAP;AACD;AACD,MAAI,CAAC,MAAD,IAAW,EAAE,QAAQ,aAAa,KAAb,CAAV,CAAf,EAA+C;AAC7C,WAAO,MAAP;AACD;AACD,MAAI,aAAa,cAAc,MAAd,CAAjB;MACI,QAAQ,gBAAgB,UAAhB,EAA4B,cAAc,KAAd,CAA5B,CADZ;;AAGA,SAAO,UAAU,UAAV,EAAsB,KAAtB,EAA6B,IAA7B,CAAkC,EAAlC,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,SAAjB","file":"trimStart-compiled.js","sourcesContent":["var baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    charsStartIndex = require('./_charsStartIndex'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/** Used to match leading and trailing whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * Removes leading whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimStart('  abc  ');\n * // => 'abc  '\n *\n * _.trimStart('-_-abc-_-', '_-');\n * // => 'abc-_-'\n */\nfunction trimStart(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrimStart, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      start = charsStartIndex(strSymbols, stringToArray(chars));\n\n  return castSlice(strSymbols, start).join('');\n}\n\nmodule.exports = trimStart;\n"]}