{"version":3,"sources":["isFunction.js"],"names":[],"mappings":"AAAA,IAAI,aAAa,QAAQ,eAAR,CAAjB;IACI,WAAW,QAAQ,YAAR,CADf;;;AAIA,IAAI,WAAW,wBAAf;IACI,UAAU,mBADd;IAEI,SAAS,4BAFb;IAGI,WAAW,gBAHf;;;;;;;;;;;;;;;;;;;AAsBA,SAAS,UAAT,CAAoB,KAApB,EAA2B;AACzB,QAAI,CAAC,SAAS,KAAT,CAAL,EAAsB;AACpB,eAAO,KAAP;AACD;;;AAGD,QAAI,MAAM,WAAW,KAAX,CAAV;AACA,WAAO,OAAO,OAAP,IAAkB,OAAO,MAAzB,IAAmC,OAAO,QAA1C,IAAsD,OAAO,QAApE;AACD;;AAED,OAAO,OAAP,GAAiB,UAAjB","file":"isFunction-compiled.js","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n"]}