{"version":3,"sources":["_baseMatchesProperty.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,gBAAR,CAAlB;IACI,MAAM,QAAQ,OAAR,CADV;IAEI,QAAQ,QAAQ,SAAR,CAFZ;IAGI,QAAQ,QAAQ,UAAR,CAHZ;IAII,qBAAqB,QAAQ,uBAAR,CAJzB;IAKI,0BAA0B,QAAQ,4BAAR,CAL9B;IAMI,QAAQ,QAAQ,UAAR,CANZ;;;AASA,IAAI,uBAAuB,CAA3B;IACI,yBAAyB,CAD7B;;;;;;;;;;AAWA,SAAS,mBAAT,CAA6B,IAA7B,EAAmC,QAAnC,EAA6C;AAC3C,MAAI,MAAM,IAAN,KAAe,mBAAmB,QAAnB,CAAnB,EAAiD;AAC/C,WAAO,wBAAwB,MAAM,IAAN,CAAxB,EAAqC,QAArC,CAAP;AACD;AACD,SAAO,UAAS,MAAT,EAAiB;AACtB,QAAI,WAAW,IAAI,MAAJ,EAAY,IAAZ,CAAf;AACA,WAAQ,aAAa,SAAb,IAA0B,aAAa,QAAxC,GACH,MAAM,MAAN,EAAc,IAAd,CADG,GAEH,YAAY,QAAZ,EAAsB,QAAtB,EAAgC,uBAAuB,sBAAvD,CAFJ;AAGD,GALD;AAMD;;AAED,OAAO,OAAP,GAAiB,mBAAjB","file":"_baseMatchesProperty-compiled.js","sourcesContent":["var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n"]}