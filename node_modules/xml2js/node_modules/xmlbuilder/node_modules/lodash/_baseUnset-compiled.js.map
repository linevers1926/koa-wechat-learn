{"version":3,"sources":["_baseUnset.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,aAAR,CAAf;IACI,OAAO,QAAQ,QAAR,CADX;IAEI,SAAS,QAAQ,WAAR,CAFb;IAGI,QAAQ,QAAQ,UAAR,CAHZ;;;;;;;;;;AAaA,SAAS,SAAT,CAAmB,MAAnB,EAA2B,IAA3B,EAAiC;AAC/B,SAAO,SAAS,IAAT,EAAe,MAAf,CAAP;AACA,WAAS,OAAO,MAAP,EAAe,IAAf,CAAT;AACA,SAAO,UAAU,IAAV,IAAkB,OAAO,OAAO,MAAM,KAAK,IAAL,CAAN,CAAP,CAAhC;AACD;;AAED,OAAO,OAAP,GAAiB,SAAjB","file":"_baseUnset-compiled.js","sourcesContent":["var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n"]}