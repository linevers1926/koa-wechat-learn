{"version":3,"sources":["overArgs.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,QAAQ,UAAR,CAAZ;IACI,WAAW,QAAQ,aAAR,CADf;IAEI,cAAc,QAAQ,gBAAR,CAFlB;IAGI,eAAe,QAAQ,iBAAR,CAHnB;IAII,WAAW,QAAQ,aAAR,CAJf;IAKI,YAAY,QAAQ,cAAR,CALhB;IAMI,WAAW,QAAQ,aAAR,CANf;IAOI,UAAU,QAAQ,WAAR,CAPd;;;AAUA,IAAI,YAAY,KAAK,GAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,IAAI,WAAW,SAAS,UAAS,IAAT,EAAe,UAAf,EAA2B;AACjD,eAAc,WAAW,MAAX,IAAqB,CAArB,IAA0B,QAAQ,WAAW,CAAX,CAAR,CAA3B,GACT,SAAS,WAAW,CAAX,CAAT,EAAwB,UAAU,YAAV,CAAxB,CADS,GAET,SAAS,YAAY,UAAZ,EAAwB,CAAxB,CAAT,EAAqC,UAAU,YAAV,CAArC,CAFJ;;AAIA,MAAI,cAAc,WAAW,MAA7B;AACA,SAAO,SAAS,UAAS,IAAT,EAAe;AAC7B,QAAI,QAAQ,CAAC,CAAb;QACI,SAAS,UAAU,KAAK,MAAf,EAAuB,WAAvB,CADb;;AAGA,WAAO,EAAE,KAAF,GAAU,MAAjB,EAAyB;AACvB,WAAK,KAAL,IAAc,WAAW,KAAX,EAAkB,IAAlB,CAAuB,IAAvB,EAA6B,KAAK,KAAL,CAA7B,CAAd;AACD;AACD,WAAO,MAAM,IAAN,EAAY,IAAZ,EAAkB,IAAlB,CAAP;AACD,GARM,CAAP;AASD,CAfc,CAAf;;AAiBA,OAAO,OAAP,GAAiB,QAAjB","file":"overArgs-compiled.js","sourcesContent":["var apply = require('./_apply'),\n    arrayMap = require('./_arrayMap'),\n    baseFlatten = require('./_baseFlatten'),\n    baseIteratee = require('./_baseIteratee'),\n    baseRest = require('./_baseRest'),\n    baseUnary = require('./_baseUnary'),\n    castRest = require('./_castRest'),\n    isArray = require('./isArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Creates a function that invokes `func` with its arguments transformed.\n *\n * @static\n * @since 4.0.0\n * @memberOf _\n * @category Function\n * @param {Function} func The function to wrap.\n * @param {...(Function|Function[])} [transforms=[_.identity]]\n *  The argument transforms.\n * @returns {Function} Returns the new function.\n * @example\n *\n * function doubled(n) {\n *   return n * 2;\n * }\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var func = _.overArgs(function(x, y) {\n *   return [x, y];\n * }, [square, doubled]);\n *\n * func(9, 3);\n * // => [81, 6]\n *\n * func(10, 5);\n * // => [100, 10]\n */\nvar overArgs = castRest(function(func, transforms) {\n  transforms = (transforms.length == 1 && isArray(transforms[0]))\n    ? arrayMap(transforms[0], baseUnary(baseIteratee))\n    : arrayMap(baseFlatten(transforms, 1), baseUnary(baseIteratee));\n\n  var funcsLength = transforms.length;\n  return baseRest(function(args) {\n    var index = -1,\n        length = nativeMin(args.length, funcsLength);\n\n    while (++index < length) {\n      args[index] = transforms[index].call(this, args[index]);\n    }\n    return apply(func, this, args);\n  });\n});\n\nmodule.exports = overArgs;\n"]}