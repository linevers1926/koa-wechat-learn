{"version":3,"sources":["_getTag.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,aAAR,CAAf;IACI,MAAM,QAAQ,QAAR,CADV;IAEI,UAAU,QAAQ,YAAR,CAFd;IAGI,MAAM,QAAQ,QAAR,CAHV;IAII,UAAU,QAAQ,YAAR,CAJd;IAKI,aAAa,QAAQ,eAAR,CALjB;IAMI,WAAW,QAAQ,aAAR,CANf;;;AASA,IAAI,SAAS,cAAb;IACI,YAAY,iBADhB;IAEI,aAAa,kBAFjB;IAGI,SAAS,cAHb;IAII,aAAa,kBAJjB;;AAMA,IAAI,cAAc,mBAAlB;;;AAGA,IAAI,qBAAqB,SAAS,QAAT,CAAzB;IACI,gBAAgB,SAAS,GAAT,CADpB;IAEI,oBAAoB,SAAS,OAAT,CAFxB;IAGI,gBAAgB,SAAS,GAAT,CAHpB;IAII,oBAAoB,SAAS,OAAT,CAJxB;;;;;;;;;AAaA,IAAI,SAAS,UAAb;;;AAGA,IAAK,YAAY,OAAO,IAAI,QAAJ,CAAa,IAAI,WAAJ,CAAgB,CAAhB,CAAb,CAAP,KAA4C,WAAzD,IACC,OAAO,OAAO,IAAI,GAAJ,EAAP,KAAmB,MAD3B,IAEC,WAAW,OAAO,QAAQ,OAAR,EAAP,KAA6B,UAFzC,IAGC,OAAO,OAAO,IAAI,GAAJ,EAAP,KAAmB,MAH3B,IAIC,WAAW,OAAO,IAAI,OAAJ,EAAP,KAAuB,UAJvC,EAIoD;AAClD,aAAS,UAAS,KAAT,EAAgB;AACvB,YAAI,SAAS,WAAW,KAAX,CAAb;YACI,OAAO,UAAU,SAAV,GAAsB,MAAM,WAA5B,GAA0C,SADrD;YAEI,aAAa,OAAO,SAAS,IAAT,CAAP,GAAwB,EAFzC;;AAIA,YAAI,UAAJ,EAAgB;AACd,oBAAQ,UAAR;AACE,qBAAK,kBAAL;AAAyB,2BAAO,WAAP;AACzB,qBAAK,aAAL;AAAoB,2BAAO,MAAP;AACpB,qBAAK,iBAAL;AAAwB,2BAAO,UAAP;AACxB,qBAAK,aAAL;AAAoB,2BAAO,MAAP;AACpB,qBAAK,iBAAL;AAAwB,2BAAO,UAAP;AAL1B;AAOD;AACD,eAAO,MAAP;AACD,KAfD;AAgBD;;AAED,OAAO,OAAP,GAAiB,MAAjB","file":"_getTag-compiled.js","sourcesContent":["var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n"]}