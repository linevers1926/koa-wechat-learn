{"version":3,"sources":["_createAggregator.js"],"names":[],"mappings":"AAAA,IAAI,kBAAkB,QAAQ,oBAAR,CAAtB;IACI,iBAAiB,QAAQ,mBAAR,CADrB;IAEI,eAAe,QAAQ,iBAAR,CAFnB;IAGI,UAAU,QAAQ,WAAR,CAHd;;;;;;;;;;AAaA,SAAS,gBAAT,CAA0B,MAA1B,EAAkC,WAAlC,EAA+C;AAC7C,WAAO,UAAS,UAAT,EAAqB,QAArB,EAA+B;AACpC,YAAI,OAAO,QAAQ,UAAR,IAAsB,eAAtB,GAAwC,cAAnD;YACI,cAAc,cAAc,aAAd,GAA8B,EADhD;;AAGA,eAAO,KAAK,UAAL,EAAiB,MAAjB,EAAyB,aAAa,QAAb,EAAuB,CAAvB,CAAzB,EAAoD,WAApD,CAAP;AACD,KALD;AAMD;;AAED,OAAO,OAAP,GAAiB,gBAAjB","file":"_createAggregator-compiled.js","sourcesContent":["var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n"]}