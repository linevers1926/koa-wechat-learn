{"version":3,"sources":["sortBy.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,gBAAR,CAAlB;IACI,cAAc,QAAQ,gBAAR,CADlB;IAEI,WAAW,QAAQ,aAAR,CAFf;IAGI,iBAAiB,QAAQ,mBAAR,CAHrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,IAAI,SAAS,SAAS,UAAS,UAAT,EAAqB,SAArB,EAAgC;AACpD,MAAI,cAAc,IAAlB,EAAwB;AACtB,WAAO,EAAP;AACD;AACD,MAAI,SAAS,UAAU,MAAvB;AACA,MAAI,SAAS,CAAT,IAAc,eAAe,UAAf,EAA2B,UAAU,CAAV,CAA3B,EAAyC,UAAU,CAAV,CAAzC,CAAlB,EAA0E;AACxE,gBAAY,EAAZ;AACD,GAFD,MAEO,IAAI,SAAS,CAAT,IAAc,eAAe,UAAU,CAAV,CAAf,EAA6B,UAAU,CAAV,CAA7B,EAA2C,UAAU,CAAV,CAA3C,CAAlB,EAA4E;AACjF,gBAAY,CAAC,UAAU,CAAV,CAAD,CAAZ;AACD;AACD,SAAO,YAAY,UAAZ,EAAwB,YAAY,SAAZ,EAAuB,CAAvB,CAAxB,EAAmD,EAAnD,CAAP;AACD,CAXY,CAAb;;AAaA,OAAO,OAAP,GAAiB,MAAjB","file":"sortBy-compiled.js","sourcesContent":["var baseFlatten = require('./_baseFlatten'),\n    baseOrderBy = require('./_baseOrderBy'),\n    baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nmodule.exports = sortBy;\n"]}