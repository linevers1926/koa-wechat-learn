{"version":3,"sources":["toPath.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,aAAR,CAAf;IACI,YAAY,QAAQ,cAAR,CADhB;IAEI,UAAU,QAAQ,WAAR,CAFd;IAGI,WAAW,QAAQ,YAAR,CAHf;IAII,eAAe,QAAQ,iBAAR,CAJnB;IAKI,QAAQ,QAAQ,UAAR,CALZ;IAMI,WAAW,QAAQ,YAAR,CANf;;;;;;;;;;;;;;;;;;;AAyBA,SAAS,MAAT,CAAgB,KAAhB,EAAuB;AACrB,MAAI,QAAQ,KAAR,CAAJ,EAAoB;AAClB,WAAO,SAAS,KAAT,EAAgB,KAAhB,CAAP;AACD;AACD,SAAO,SAAS,KAAT,IAAkB,CAAC,KAAD,CAAlB,GAA4B,UAAU,aAAa,SAAS,KAAT,CAAb,CAAV,CAAnC;AACD;;AAED,OAAO,OAAP,GAAiB,MAAjB","file":"toPath-compiled.js","sourcesContent":["var arrayMap = require('./_arrayMap'),\n    copyArray = require('./_copyArray'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol'),\n    stringToPath = require('./_stringToPath'),\n    toKey = require('./_toKey'),\n    toString = require('./toString');\n\n/**\n * Converts `value` to a property path array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {*} value The value to convert.\n * @returns {Array} Returns the new property path array.\n * @example\n *\n * _.toPath('a.b.c');\n * // => ['a', 'b', 'c']\n *\n * _.toPath('a[0].b.c');\n * // => ['a', '0', 'b', 'c']\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return arrayMap(value, toKey);\n  }\n  return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n}\n\nmodule.exports = toPath;\n"]}