{"version":3,"sources":["_createCurry.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,QAAQ,UAAR,CAAZ;IACI,aAAa,QAAQ,eAAR,CADjB;IAEI,eAAe,QAAQ,iBAAR,CAFnB;IAGI,gBAAgB,QAAQ,kBAAR,CAHpB;IAII,YAAY,QAAQ,cAAR,CAJhB;IAKI,iBAAiB,QAAQ,mBAAR,CALrB;IAMI,OAAO,QAAQ,SAAR,CANX;;;;;;;;;;;AAiBA,SAAS,WAAT,CAAqB,IAArB,EAA2B,OAA3B,EAAoC,KAApC,EAA2C;AACzC,MAAI,OAAO,WAAW,IAAX,CAAX;;AAEA,WAAS,OAAT,GAAmB;AACjB,QAAI,SAAS,UAAU,MAAvB;QACI,OAAO,MAAM,MAAN,CADX;QAEI,QAAQ,MAFZ;QAGI,cAAc,UAAU,OAAV,CAHlB;;AAKA,WAAO,OAAP,EAAgB;AACd,WAAK,KAAL,IAAc,UAAU,KAAV,CAAd;AACD;AACD,QAAI,UAAW,SAAS,CAAT,IAAc,KAAK,CAAL,MAAY,WAA1B,IAAyC,KAAK,SAAS,CAAd,MAAqB,WAA/D,GACV,EADU,GAEV,eAAe,IAAf,EAAqB,WAArB,CAFJ;;AAIA,cAAU,QAAQ,MAAlB;AACA,QAAI,SAAS,KAAb,EAAoB;AAClB,aAAO,cACL,IADK,EACC,OADD,EACU,YADV,EACwB,QAAQ,WADhC,EAC6C,SAD7C,EAEL,IAFK,EAEC,OAFD,EAEU,SAFV,EAEqB,SAFrB,EAEgC,QAAQ,MAFxC,CAAP;AAGD;AACD,QAAI,KAAM,QAAQ,SAAS,IAAjB,IAAyB,gBAAgB,OAA1C,GAAqD,IAArD,GAA4D,IAArE;AACA,WAAO,MAAM,EAAN,EAAU,IAAV,EAAgB,IAAhB,CAAP;AACD;AACD,SAAO,OAAP;AACD;;AAED,OAAO,OAAP,GAAiB,WAAjB","file":"_createCurry-compiled.js","sourcesContent":["var apply = require('./_apply'),\n    createCtor = require('./_createCtor'),\n    createHybrid = require('./_createHybrid'),\n    createRecurry = require('./_createRecurry'),\n    getHolder = require('./_getHolder'),\n    replaceHolders = require('./_replaceHolders'),\n    root = require('./_root');\n\n/**\n * Creates a function that wraps `func` to enable currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {number} arity The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCurry(func, bitmask, arity) {\n  var Ctor = createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length,\n        placeholder = getHolder(wrapper);\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n      ? []\n      : replaceHolders(args, placeholder);\n\n    length -= holders.length;\n    if (length < arity) {\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, undefined,\n        args, holders, undefined, undefined, arity - length);\n    }\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return apply(fn, this, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createCurry;\n"]}