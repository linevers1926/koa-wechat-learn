{"version":3,"sources":["isPlainObject.js"],"names":[],"mappings":"AAAA,IAAI,aAAa,QAAQ,eAAR,CAAjB;IACI,eAAe,QAAQ,iBAAR,CADnB;IAEI,eAAe,QAAQ,gBAAR,CAFnB;;;AAKA,IAAI,YAAY,iBAAhB;;;AAGA,IAAI,YAAY,SAAS,SAAzB;IACI,cAAc,OAAO,SADzB;;;AAIA,IAAI,eAAe,UAAU,QAA7B;;;AAGA,IAAI,iBAAiB,YAAY,cAAjC;;;AAGA,IAAI,mBAAmB,aAAa,IAAb,CAAkB,MAAlB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,SAAS,aAAT,CAAuB,KAAvB,EAA8B;AAC5B,MAAI,CAAC,aAAa,KAAb,CAAD,IAAwB,WAAW,KAAX,KAAqB,SAAjD,EAA4D;AAC1D,WAAO,KAAP;AACD;AACD,MAAI,QAAQ,aAAa,KAAb,CAAZ;AACA,MAAI,UAAU,IAAd,EAAoB;AAClB,WAAO,IAAP;AACD;AACD,MAAI,OAAO,eAAe,IAAf,CAAoB,KAApB,EAA2B,aAA3B,KAA6C,MAAM,WAA9D;AACA,SAAO,OAAO,IAAP,IAAe,UAAf,IAA6B,gBAAgB,IAA7C,IACL,aAAa,IAAb,CAAkB,IAAlB,KAA2B,gBAD7B;AAED;;AAED,OAAO,OAAP,GAAiB,aAAjB","file":"isPlainObject-compiled.js","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n"]}