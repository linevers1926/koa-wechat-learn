{"version":3,"sources":["concat.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAQ,cAAR,CAAhB;IACI,cAAc,QAAQ,gBAAR,CADlB;IAEI,YAAY,QAAQ,cAAR,CAFhB;IAGI,UAAU,QAAQ,WAAR,CAHd;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,SAAS,MAAT,GAAkB;AAChB,MAAI,SAAS,UAAU,MAAvB;AACA,MAAI,CAAC,MAAL,EAAa;AACX,WAAO,EAAP;AACD;AACD,MAAI,OAAO,MAAM,SAAS,CAAf,CAAX;MACI,QAAQ,UAAU,CAAV,CADZ;MAEI,QAAQ,MAFZ;;AAIA,SAAO,OAAP,EAAgB;AACd,SAAK,QAAQ,CAAb,IAAkB,UAAU,KAAV,CAAlB;AACD;AACD,SAAO,UAAU,QAAQ,KAAR,IAAiB,UAAU,KAAV,CAAjB,GAAoC,CAAC,KAAD,CAA9C,EAAuD,YAAY,IAAZ,EAAkB,CAAlB,CAAvD,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,MAAjB","file":"concat-compiled.js","sourcesContent":["var arrayPush = require('./_arrayPush'),\n    baseFlatten = require('./_baseFlatten'),\n    copyArray = require('./_copyArray'),\n    isArray = require('./isArray');\n\n/**\n * Creates a new array concatenating `array` with any additional arrays\n * and/or values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to concatenate.\n * @param {...*} [values] The values to concatenate.\n * @returns {Array} Returns the new concatenated array.\n * @example\n *\n * var array = [1];\n * var other = _.concat(array, 2, [3], [[4]]);\n *\n * console.log(other);\n * // => [1, 2, 3, [4]]\n *\n * console.log(array);\n * // => [1]\n */\nfunction concat() {\n  var length = arguments.length;\n  if (!length) {\n    return [];\n  }\n  var args = Array(length - 1),\n      array = arguments[0],\n      index = length;\n\n  while (index--) {\n    args[index - 1] = arguments[index];\n  }\n  return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n}\n\nmodule.exports = concat;\n"]}