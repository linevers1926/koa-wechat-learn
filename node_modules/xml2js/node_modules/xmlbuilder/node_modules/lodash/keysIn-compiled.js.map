{"version":3,"sources":["keysIn.js"],"names":[],"mappings":"AAAA,IAAI,gBAAgB,QAAQ,kBAAR,CAApB;IACI,aAAa,QAAQ,eAAR,CADjB;IAEI,cAAc,QAAQ,eAAR,CAFlB;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,SAAS,MAAT,CAAgB,MAAhB,EAAwB;AACtB,SAAO,YAAY,MAAZ,IAAsB,cAAc,MAAd,EAAsB,IAAtB,CAAtB,GAAoD,WAAW,MAAX,CAA3D;AACD;;AAED,OAAO,OAAP,GAAiB,MAAjB","file":"keysIn-compiled.js","sourcesContent":["var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n"]}