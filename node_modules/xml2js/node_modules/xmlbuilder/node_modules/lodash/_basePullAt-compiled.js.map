{"version":3,"sources":["_basePullAt.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAQ,cAAR,CAAhB;IACI,UAAU,QAAQ,YAAR,CADd;;;AAIA,IAAI,aAAa,MAAM,SAAvB;;;AAGA,IAAI,SAAS,WAAW,MAAxB;;;;;;;;;;;AAWA,SAAS,UAAT,CAAoB,KAApB,EAA2B,OAA3B,EAAoC;AAClC,MAAI,SAAS,QAAQ,QAAQ,MAAhB,GAAyB,CAAtC;MACI,YAAY,SAAS,CADzB;;AAGA,SAAO,QAAP,EAAiB;AACf,QAAI,QAAQ,QAAQ,MAAR,CAAZ;AACA,QAAI,UAAU,SAAV,IAAuB,UAAU,QAArC,EAA+C;AAC7C,UAAI,WAAW,KAAf;AACA,UAAI,QAAQ,KAAR,CAAJ,EAAoB;AAClB,eAAO,IAAP,CAAY,KAAZ,EAAmB,KAAnB,EAA0B,CAA1B;AACD,OAFD,MAEO;AACL,kBAAU,KAAV,EAAiB,KAAjB;AACD;AACF;AACF;AACD,SAAO,KAAP;AACD;;AAED,OAAO,OAAP,GAAiB,UAAjB","file":"_basePullAt-compiled.js","sourcesContent":["var baseUnset = require('./_baseUnset'),\n    isIndex = require('./_isIndex');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAt` without support for individual\n * indexes or capturing the removed elements.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {number[]} indexes The indexes of elements to remove.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAt(array, indexes) {\n  var length = array ? indexes.length : 0,\n      lastIndex = length - 1;\n\n  while (length--) {\n    var index = indexes[length];\n    if (length == lastIndex || index !== previous) {\n      var previous = index;\n      if (isIndex(index)) {\n        splice.call(array, index, 1);\n      } else {\n        baseUnset(array, index);\n      }\n    }\n  }\n  return array;\n}\n\nmodule.exports = basePullAt;\n"]}