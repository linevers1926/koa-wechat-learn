{"version":3,"sources":["_assignMergeValue.js"],"names":[],"mappings":"AAAA,IAAI,kBAAkB,QAAQ,oBAAR,CAAtB;IACI,KAAK,QAAQ,MAAR,CADT;;;;;;;;;;;AAYA,SAAS,gBAAT,CAA0B,MAA1B,EAAkC,GAAlC,EAAuC,KAAvC,EAA8C;AAC5C,MAAK,UAAU,SAAV,IAAuB,CAAC,GAAG,OAAO,GAAP,CAAH,EAAgB,KAAhB,CAAzB,IACC,UAAU,SAAV,IAAuB,EAAE,OAAO,MAAT,CAD5B,EAC+C;AAC7C,oBAAgB,MAAhB,EAAwB,GAAxB,EAA6B,KAA7B;AACD;AACF;;AAED,OAAO,OAAP,GAAiB,gBAAjB","file":"_assignMergeValue-compiled.js","sourcesContent":["var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n"]}