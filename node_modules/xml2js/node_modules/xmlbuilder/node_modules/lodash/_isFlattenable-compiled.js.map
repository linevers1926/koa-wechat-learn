{"version":3,"sources":["_isFlattenable.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,WAAR,CAAb;IACI,cAAc,QAAQ,eAAR,CADlB;IAEI,UAAU,QAAQ,WAAR,CAFd;;;AAKA,IAAI,mBAAmB,SAAS,OAAO,kBAAhB,GAAqC,SAA5D;;;;;;;;;AASA,SAAS,aAAT,CAAuB,KAAvB,EAA8B;AAC5B,WAAO,QAAQ,KAAR,KAAkB,YAAY,KAAZ,CAAlB,IACL,CAAC,EAAE,oBAAoB,KAApB,IAA6B,MAAM,gBAAN,CAA/B,CADH;AAED;;AAED,OAAO,OAAP,GAAiB,aAAjB","file":"_isFlattenable-compiled.js","sourcesContent":["var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n"]}