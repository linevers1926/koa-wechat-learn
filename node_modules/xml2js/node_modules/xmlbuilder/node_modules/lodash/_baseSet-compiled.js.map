{"version":3,"sources":["_baseSet.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,gBAAR,CAAlB;IACI,WAAW,QAAQ,aAAR,CADf;IAEI,UAAU,QAAQ,YAAR,CAFd;IAGI,WAAW,QAAQ,YAAR,CAHf;IAII,QAAQ,QAAQ,UAAR,CAJZ;;;;;;;;;;;;AAgBA,SAAS,OAAT,CAAiB,MAAjB,EAAyB,IAAzB,EAA+B,KAA/B,EAAsC,UAAtC,EAAkD;AAChD,MAAI,CAAC,SAAS,MAAT,CAAL,EAAuB;AACrB,WAAO,MAAP;AACD;AACD,SAAO,SAAS,IAAT,EAAe,MAAf,CAAP;;AAEA,MAAI,QAAQ,CAAC,CAAb;MACI,SAAS,KAAK,MADlB;MAEI,YAAY,SAAS,CAFzB;MAGI,SAAS,MAHb;;AAKA,SAAO,UAAU,IAAV,IAAkB,EAAE,KAAF,GAAU,MAAnC,EAA2C;AACzC,QAAI,MAAM,MAAM,KAAK,KAAL,CAAN,CAAV;QACI,WAAW,KADf;;AAGA,QAAI,SAAS,SAAb,EAAwB;AACtB,UAAI,WAAW,OAAO,GAAP,CAAf;AACA,iBAAW,aAAa,WAAW,QAAX,EAAqB,GAArB,EAA0B,MAA1B,CAAb,GAAiD,SAA5D;AACA,UAAI,aAAa,SAAjB,EAA4B;AAC1B,mBAAW,SAAS,QAAT,IACP,QADO,GAEN,QAAQ,KAAK,QAAQ,CAAb,CAAR,IAA2B,EAA3B,GAAgC,EAFrC;AAGD;AACF;AACD,gBAAY,MAAZ,EAAoB,GAApB,EAAyB,QAAzB;AACA,aAAS,OAAO,GAAP,CAAT;AACD;AACD,SAAO,MAAP;AACD;;AAED,OAAO,OAAP,GAAiB,OAAjB","file":"_baseSet-compiled.js","sourcesContent":["var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n"]}