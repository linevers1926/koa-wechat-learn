{"version":3,"sources":["_setWrapToString.js"],"names":[],"mappings":"AAAA,IAAI,iBAAiB,QAAQ,mBAAR,CAArB;IACI,oBAAoB,QAAQ,sBAAR,CADxB;IAEI,cAAc,QAAQ,gBAAR,CAFlB;IAGI,oBAAoB,QAAQ,sBAAR,CAHxB;;;;;;;;;;;;AAeA,SAAS,eAAT,CAAyB,OAAzB,EAAkC,SAAlC,EAA6C,OAA7C,EAAsD;AACpD,MAAI,SAAU,YAAY,EAA1B;AACA,SAAO,YAAY,OAAZ,EAAqB,kBAAkB,MAAlB,EAA0B,kBAAkB,eAAe,MAAf,CAAlB,EAA0C,OAA1C,CAA1B,CAArB,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,eAAjB","file":"_setWrapToString-compiled.js","sourcesContent":["var getWrapDetails = require('./_getWrapDetails'),\n    insertWrapDetails = require('./_insertWrapDetails'),\n    setToString = require('./_setToString'),\n    updateWrapDetails = require('./_updateWrapDetails');\n\n/**\n * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n * with wrapper details in a comment at the top of the source body.\n *\n * @private\n * @param {Function} wrapper The function to modify.\n * @param {Function} reference The reference function.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @returns {Function} Returns `wrapper`.\n */\nfunction setWrapToString(wrapper, reference, bitmask) {\n  var source = (reference + '');\n  return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n}\n\nmodule.exports = setWrapToString;\n"]}