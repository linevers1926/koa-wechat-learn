{"version":3,"sources":["_baseIsNative.js"],"names":[],"mappings":"AAAA,IAAI,aAAa,QAAQ,cAAR,CAAjB;IACI,WAAW,QAAQ,aAAR,CADf;IAEI,WAAW,QAAQ,YAAR,CAFf;IAGI,WAAW,QAAQ,aAAR,CAHf;;;;;;AASA,IAAI,eAAe,qBAAnB;;;AAGA,IAAI,eAAe,6BAAnB;;;AAGA,IAAI,YAAY,SAAS,SAAzB;IACI,cAAc,OAAO,SADzB;;;AAIA,IAAI,eAAe,UAAU,QAA7B;;;AAGA,IAAI,iBAAiB,YAAY,cAAjC;;;AAGA,IAAI,aAAa,OAAO,MACtB,aAAa,IAAb,CAAkB,cAAlB,EAAkC,OAAlC,CAA0C,YAA1C,EAAwD,MAAxD,EACC,OADD,CACS,wDADT,EACmE,OADnE,CADsB,GAEwD,GAF/D,CAAjB;;;;;;;;;;AAaA,SAAS,YAAT,CAAsB,KAAtB,EAA6B;AAC3B,MAAI,CAAC,SAAS,KAAT,CAAD,IAAoB,SAAS,KAAT,CAAxB,EAAyC;AACvC,WAAO,KAAP;AACD;AACD,MAAI,UAAU,WAAW,KAAX,IAAoB,UAApB,GAAiC,YAA/C;AACA,SAAO,QAAQ,IAAR,CAAa,SAAS,KAAT,CAAb,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,YAAjB","file":"_baseIsNative-compiled.js","sourcesContent":["var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n"]}