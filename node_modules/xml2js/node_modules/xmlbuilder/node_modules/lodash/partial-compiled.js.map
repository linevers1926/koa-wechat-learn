{"version":3,"sources":["partial.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,aAAR,CAAf;IACI,aAAa,QAAQ,eAAR,CADjB;IAEI,YAAY,QAAQ,cAAR,CAFhB;IAGI,iBAAiB,QAAQ,mBAAR,CAHrB;;;AAMA,IAAI,oBAAoB,EAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,IAAI,UAAU,SAAS,UAAS,IAAT,EAAe,QAAf,EAAyB;AAC9C,MAAI,UAAU,eAAe,QAAf,EAAyB,UAAU,OAAV,CAAzB,CAAd;AACA,SAAO,WAAW,IAAX,EAAiB,iBAAjB,EAAoC,SAApC,EAA+C,QAA/C,EAAyD,OAAzD,CAAP;AACD,CAHa,CAAd;;;AAMA,QAAQ,WAAR,GAAsB,EAAtB;;AAEA,OAAO,OAAP,GAAiB,OAAjB","file":"partial-compiled.js","sourcesContent":["var baseRest = require('./_baseRest'),\n    createWrap = require('./_createWrap'),\n    getHolder = require('./_getHolder'),\n    replaceHolders = require('./_replaceHolders');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_PARTIAL_FLAG = 32;\n\n/**\n * Creates a function that invokes `func` with `partials` prepended to the\n * arguments it receives. This method is like `_.bind` except it does **not**\n * alter the `this` binding.\n *\n * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n * builds, may be used as a placeholder for partially applied arguments.\n *\n * **Note:** This method doesn't set the \"length\" property of partially\n * applied functions.\n *\n * @static\n * @memberOf _\n * @since 0.2.0\n * @category Function\n * @param {Function} func The function to partially apply arguments to.\n * @param {...*} [partials] The arguments to be partially applied.\n * @returns {Function} Returns the new partially applied function.\n * @example\n *\n * function greet(greeting, name) {\n *   return greeting + ' ' + name;\n * }\n *\n * var sayHelloTo = _.partial(greet, 'hello');\n * sayHelloTo('fred');\n * // => 'hello fred'\n *\n * // Partially applied with placeholders.\n * var greetFred = _.partial(greet, _, 'fred');\n * greetFred('hi');\n * // => 'hi fred'\n */\nvar partial = baseRest(function(func, partials) {\n  var holders = replaceHolders(partials, getHolder(partial));\n  return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n});\n\n// Assign default placeholders.\npartial.placeholder = {};\n\nmodule.exports = partial;\n"]}