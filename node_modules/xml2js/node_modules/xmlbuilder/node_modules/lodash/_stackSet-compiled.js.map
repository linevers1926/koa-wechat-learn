{"version":3,"sources":["_stackSet.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAQ,cAAR,CAAhB;IACI,MAAM,QAAQ,QAAR,CADV;IAEI,WAAW,QAAQ,aAAR,CAFf;;;AAKA,IAAI,mBAAmB,GAAvB;;;;;;;;;;;;AAYA,SAAS,QAAT,CAAkB,GAAlB,EAAuB,KAAvB,EAA8B;AAC5B,MAAI,OAAO,KAAK,QAAhB;AACA,MAAI,gBAAgB,SAApB,EAA+B;AAC7B,QAAI,QAAQ,KAAK,QAAjB;AACA,QAAI,CAAC,GAAD,IAAS,MAAM,MAAN,GAAe,mBAAmB,CAA/C,EAAmD;AACjD,YAAM,IAAN,CAAW,CAAC,GAAD,EAAM,KAAN,CAAX;AACA,WAAK,IAAL,GAAY,EAAE,KAAK,IAAnB;AACA,aAAO,IAAP;AACD;AACD,WAAO,KAAK,QAAL,GAAgB,IAAI,QAAJ,CAAa,KAAb,CAAvB;AACD;AACD,OAAK,GAAL,CAAS,GAAT,EAAc,KAAd;AACA,OAAK,IAAL,GAAY,KAAK,IAAjB;AACA,SAAO,IAAP;AACD;;AAED,OAAO,OAAP,GAAiB,QAAjB","file":"_stackSet-compiled.js","sourcesContent":["var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n"]}