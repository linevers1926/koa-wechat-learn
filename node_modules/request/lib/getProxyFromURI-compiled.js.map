{"version":3,"sources":["getProxyFromURI.js"],"names":[],"mappings":"AAAA;;AAEA,SAAS,cAAT,CAAwB,QAAxB,EAAkC;;AAEhC,SAAO,SAAS,OAAT,CAAiB,MAAjB,EAAyB,GAAzB,EAA8B,WAA9B,EAAP;AACD;;AAED,SAAS,gBAAT,CAA0B,IAA1B,EAAgC;AAC9B,SAAO,KAAK,IAAL,GAAY,WAAZ,EAAP;;AAEA,MAAI,YAAY,KAAK,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAhB;MACI,WAAW,eAAe,UAAU,CAAV,CAAf,CADf;MAEI,WAAW,UAAU,CAAV,CAFf;MAGI,UAAU,KAAK,OAAL,CAAa,GAAb,IAAoB,CAAC,CAHnC;;AAKA,SAAO,EAAC,UAAU,QAAX,EAAqB,MAAM,QAA3B,EAAqC,SAAS,OAA9C,EAAP;AACD;;AAED,SAAS,YAAT,CAAsB,GAAtB,EAA2B,OAA3B,EAAoC;AAClC,MAAI,OAAO,IAAI,IAAJ,KAAa,IAAI,QAAJ,KAAiB,QAAjB,GAA4B,KAA5B,GAAoC,IAAjD,CAAX;MACI,WAAW,eAAe,IAAI,QAAnB,CADf;MAEI,cAAc,QAAQ,KAAR,CAAc,GAAd,CAFlB;;;AAKA,SAAO,YAAY,GAAZ,CAAgB,gBAAhB,EAAkC,IAAlC,CAAuC,UAAS,WAAT,EAAsB;AAClE,QAAI,cAAc,SAAS,OAAT,CAAiB,YAAY,QAA7B,CAAlB;QACI,kBACE,cAAc,CAAC,CAAf,IACC,gBAAgB,SAAS,MAAT,GAAkB,YAAY,QAAZ,CAAqB,MAH9D;;AAMA,QAAI,YAAY,OAAhB,EAAyB;AACvB,aAAQ,SAAS,YAAY,IAAtB,IAA+B,eAAtC;AACD;;AAED,WAAO,eAAP;AACD,GAZM,CAAP;AAaD;;AAED,SAAS,eAAT,CAAyB,GAAzB,EAA8B;;;;;AAK5B,MAAI,UAAU,QAAQ,GAAR,CAAY,QAAZ,IAAwB,QAAQ,GAAR,CAAY,QAApC,IAAgD,EAA9D;;;;AAIA,MAAI,YAAY,GAAhB,EAAqB;AACnB,WAAO,IAAP;AACD;;;;AAID,MAAI,YAAY,EAAZ,IAAkB,aAAa,GAAb,EAAkB,OAAlB,CAAtB,EAAkD;AAChD,WAAO,IAAP;AACD;;;;AAID,MAAI,IAAI,QAAJ,KAAiB,OAArB,EAA8B;AAC5B,WAAO,QAAQ,GAAR,CAAY,UAAZ,IACA,QAAQ,GAAR,CAAY,UADZ,IAC0B,IADjC;AAED;;AAED,MAAI,IAAI,QAAJ,KAAiB,QAArB,EAA+B;AAC7B,WAAO,QAAQ,GAAR,CAAY,WAAZ,IACA,QAAQ,GAAR,CAAY,WADZ,IAEA,QAAQ,GAAR,CAAY,UAFZ,IAGA,QAAQ,GAAR,CAAY,UAHZ,IAG2B,IAHlC;AAID;;;;;AAKD,SAAO,IAAP;AACD;;AAED,OAAO,OAAP,GAAiB,eAAjB","file":"getProxyFromURI-compiled.js","sourcesContent":["'use strict'\n\nfunction formatHostname(hostname) {\n  // canonicalize the hostname, so that 'oogle.com' won't match 'google.com'\n  return hostname.replace(/^\\.*/, '.').toLowerCase()\n}\n\nfunction parseNoProxyZone(zone) {\n  zone = zone.trim().toLowerCase()\n\n  var zoneParts = zone.split(':', 2)\n    , zoneHost = formatHostname(zoneParts[0])\n    , zonePort = zoneParts[1]\n    , hasPort = zone.indexOf(':') > -1\n\n  return {hostname: zoneHost, port: zonePort, hasPort: hasPort}\n}\n\nfunction uriInNoProxy(uri, noProxy) {\n  var port = uri.port || (uri.protocol === 'https:' ? '443' : '80')\n    , hostname = formatHostname(uri.hostname)\n    , noProxyList = noProxy.split(',')\n\n  // iterate through the noProxyList until it finds a match.\n  return noProxyList.map(parseNoProxyZone).some(function(noProxyZone) {\n    var isMatchedAt = hostname.indexOf(noProxyZone.hostname)\n      , hostnameMatched = (\n          isMatchedAt > -1 &&\n          (isMatchedAt === hostname.length - noProxyZone.hostname.length)\n        )\n\n    if (noProxyZone.hasPort) {\n      return (port === noProxyZone.port) && hostnameMatched\n    }\n\n    return hostnameMatched\n  })\n}\n\nfunction getProxyFromURI(uri) {\n  // Decide the proper request proxy to use based on the request URI object and the\n  // environmental variables (NO_PROXY, HTTP_PROXY, etc.)\n  // respect NO_PROXY environment variables (see: http://lynx.isc.org/current/breakout/lynx_help/keystrokes/environments.html)\n\n  var noProxy = process.env.NO_PROXY || process.env.no_proxy || ''\n\n  // if the noProxy is a wildcard then return null\n\n  if (noProxy === '*') {\n    return null\n  }\n\n  // if the noProxy is not empty and the uri is found return null\n\n  if (noProxy !== '' && uriInNoProxy(uri, noProxy)) {\n    return null\n  }\n\n  // Check for HTTP or HTTPS Proxy in environment Else default to null\n\n  if (uri.protocol === 'http:') {\n    return process.env.HTTP_PROXY ||\n           process.env.http_proxy || null\n  }\n\n  if (uri.protocol === 'https:') {\n    return process.env.HTTPS_PROXY ||\n           process.env.https_proxy ||\n           process.env.HTTP_PROXY  ||\n           process.env.http_proxy  || null\n  }\n\n  // if none of that works, return null\n  // (What uri protocol are you using then?)\n\n  return null\n}\n\nmodule.exports = getProxyFromURI\n"]}