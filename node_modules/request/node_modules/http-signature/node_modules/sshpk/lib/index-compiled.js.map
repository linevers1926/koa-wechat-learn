{"version":3,"sources":["index.js"],"names":[],"mappings":";;AAEA,IAAI,MAAM,QAAQ,OAAR,CAAV;AACA,IAAI,cAAc,QAAQ,eAAR,CAAlB;AACA,IAAI,YAAY,QAAQ,aAAR,CAAhB;AACA,IAAI,aAAa,QAAQ,eAAR,CAAjB;AACA,IAAI,cAAc,QAAQ,eAAR,CAAlB;AACA,IAAI,WAAW,QAAQ,YAAR,CAAf;AACA,IAAI,OAAO,QAAQ,UAAR,CAAX;;AAEA,OAAO,OAAP,GAAiB;;AAEhB,MAAK,GAFW;AAGhB,WAAU,IAAI,KAHE;AAIhB,cAAa,WAJG;AAKhB,mBAAkB,YAAY,KALd;AAMhB,YAAW,SANK;AAOhB,iBAAgB,UAAU,KAPV;AAQhB,aAAY,UARI;AAShB,kBAAiB,WAAW,KATZ;AAUhB,cAAa,WAVG;AAWhB,mBAAkB,YAAY,KAXd;AAYhB,8BAA6B,YAAY,gBAZzB;AAahB,oBAAmB,YAAY,MAbf;AAchB,WAAU,QAdM;AAehB,iBAAgB,SAAS,OAfT;AAgBhB,kBAAiB,SAAS,OAhBV;AAiBhB,kBAAiB,SAAS,OAjBV;AAkBhB,mBAAkB,SAAS,QAlBX;;;AAqBhB,yBAAwB,KAAK,sBArBb;AAsBhB,wBAAuB,KAAK,qBAtBZ;AAuBhB,gBAAe,KAAK,aAvBJ;AAwBhB,sBAAqB,KAAK,mBAxBV;AAyBhB,oBAAmB,KAAK,iBAzBR;AA0BhB,wBAAuB,KAAK;AA1BZ,CAAjB","file":"index-compiled.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nvar Key = require('./key');\nvar Fingerprint = require('./fingerprint');\nvar Signature = require('./signature');\nvar PrivateKey = require('./private-key');\nvar Certificate = require('./certificate');\nvar Identity = require('./identity');\nvar errs = require('./errors');\n\nmodule.exports = {\n\t/* top-level classes */\n\tKey: Key,\n\tparseKey: Key.parse,\n\tFingerprint: Fingerprint,\n\tparseFingerprint: Fingerprint.parse,\n\tSignature: Signature,\n\tparseSignature: Signature.parse,\n\tPrivateKey: PrivateKey,\n\tparsePrivateKey: PrivateKey.parse,\n\tCertificate: Certificate,\n\tparseCertificate: Certificate.parse,\n\tcreateSelfSignedCertificate: Certificate.createSelfSigned,\n\tcreateCertificate: Certificate.create,\n\tIdentity: Identity,\n\tidentityFromDN: Identity.parseDN,\n\tidentityForHost: Identity.forHost,\n\tidentityForUser: Identity.forUser,\n\tidentityForEmail: Identity.forEmail,\n\n\t/* errors */\n\tFingerprintFormatError: errs.FingerprintFormatError,\n\tInvalidAlgorithmError: errs.InvalidAlgorithmError,\n\tKeyParseError: errs.KeyParseError,\n\tSignatureParseError: errs.SignatureParseError,\n\tKeyEncryptedError: errs.KeyEncryptedError,\n\tCertificateParseError: errs.CertificateParseError\n};\n"]}