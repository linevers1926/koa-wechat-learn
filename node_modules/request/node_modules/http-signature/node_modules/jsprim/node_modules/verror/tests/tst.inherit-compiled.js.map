{"version":3,"sources":["tst.inherit.js"],"names":[],"mappings":";;;;AAIA,IAAI,aAAa,QAAQ,QAAR,CAAjB;AACA,IAAI,WAAW,QAAQ,MAAR,CAAf;;AAEA,IAAI,aAAa,QAAQ,eAAR,CAAjB;;AAEA,IAAI,SAAS,WAAW,MAAxB;AACA,IAAI,SAAS,WAAW,MAAxB;AACA,IAAI,GAAJ,EAAS,MAAT;;AAEA,SAAS,WAAT,GACA;AACC,QAAO,KAAP,CAAa,IAAb,EAAmB,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAnB;AACA;;AAED,SAAS,QAAT,CAAkB,WAAlB,EAA+B,MAA/B;AACA,YAAY,SAAZ,CAAsB,IAAtB,GAA6B,aAA7B;;AAGA,SAAS,WAAT,GACA;AACC,QAAO,KAAP,CAAa,IAAb,EAAmB,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAnB;AACA;;AAED,SAAS,QAAT,CAAkB,WAAlB,EAA+B,MAA/B;AACA,YAAY,SAAZ,CAAsB,IAAtB,GAA6B,aAA7B;;AAGA,SAAS,IAAI,KAAJ,CAAU,YAAV,CAAT;AACA,MAAM,IAAI,WAAJ,CAAgB,MAAhB,EAAwB,KAAxB,CAAN;AACA,WAAW,EAAX,CAAc,eAAe,KAA7B;AACA,WAAW,EAAX,CAAc,eAAe,MAA7B;AACA,WAAW,EAAX,CAAc,eAAe,WAA7B;AACA,WAAW,KAAX,CAAiB,IAAI,KAAJ,EAAjB,EAA8B,MAA9B;AACA,WAAW,KAAX,CAAiB,IAAI,OAArB,EAA8B,iBAA9B;AACA,WAAW,KAAX,CAAiB,IAAI,QAAJ,EAAjB,EAAiC,8BAAjC;AACA,WAAW,KAAX,CAAiB,IAAI,KAAJ,CAAU,KAAV,CAAgB,IAAhB,EAAsB,CAAtB,CAAjB,EAA2C,8BAA3C;;AAEA,SAAS,IAAI,KAAJ,CAAU,YAAV,CAAT;AACA,MAAM,IAAI,WAAJ,CAAgB,MAAhB,EAAwB,KAAxB,CAAN;AACA,WAAW,EAAX,CAAc,eAAe,KAA7B;AACA,WAAW,EAAX,CAAc,eAAe,MAA7B;AACA,WAAW,EAAX,CAAc,eAAe,WAA7B;AACA,WAAW,KAAX,CAAiB,IAAI,KAAJ,EAAjB,EAA8B,MAA9B;AACA,WAAW,KAAX,CAAiB,IAAI,OAArB,EAA8B,KAA9B;AACA,WAAW,KAAX,CAAiB,IAAI,QAAJ,EAAjB,EACC,+CADD;AAEA,WAAW,KAAX,CAAiB,IAAI,KAAJ,CAAU,KAAV,CAAgB,IAAhB,EAAsB,CAAtB,CAAjB,EACC,+CADD;;;;AAMA,SAAS,iBAAT,GAA6B;AAC5B,QAAO,KAAP,CAAa,IAAb,EAAmB,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAnB;AACA;AACD,SAAS,QAAT,CAAkB,iBAAlB,EAAqC,MAArC;AACA,MAAM,IAAI,iBAAJ,CAAsB,KAAtB,CAAN;AACA,WAAW,KAAX,CAAiB,IAAI,QAAJ,EAAjB,EAAiC,wBAAjC;;AAEA,SAAS,iBAAT,GAA6B;AAC5B,QAAO,KAAP,CAAa,IAAb,EAAmB,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAnB;AACA;AACD,SAAS,QAAT,CAAkB,iBAAlB,EAAqC,MAArC;AACA,MAAM,IAAI,iBAAJ,CAAsB,KAAtB,CAAN;AACA,WAAW,KAAX,CAAiB,IAAI,QAAJ,EAAjB,EAAiC,wBAAjC;;;;AAKA,IAAI,kBAAkB,YAAY;AACjC,QAAO,KAAP,CAAa,IAAb,EAAmB,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAnB;AACA,CAFD;AAGA,SAAS,QAAT,CAAkB,eAAlB,EAAmC,MAAnC;AACA,gBAAgB,SAAhB,CAA0B,IAA1B,GAAiC,iBAAjC;AACA,MAAM,IAAI,eAAJ,CAAoB,KAApB,CAAN;AACA,WAAW,KAAX,CAAiB,IAAI,QAAJ,EAAjB,EAAiC,sBAAjC;;AAEA,IAAI,kBAAkB,YAAY;AACjC,QAAO,KAAP,CAAa,IAAb,EAAmB,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAnB;AACA,CAFD;AAGA,SAAS,QAAT,CAAkB,eAAlB,EAAmC,MAAnC;AACA,gBAAgB,SAAhB,CAA0B,IAA1B,GAAiC,iBAAjC;AACA,MAAM,IAAI,eAAJ,CAAoB,KAApB,CAAN;AACA,WAAW,KAAX,CAAiB,IAAI,QAAJ,EAAjB,EAAiC,sBAAjC;;;;;AAMA,MAAM,IAAI,MAAJ,CAAW,KAAX,CAAN;AACA,IAAI,IAAJ,GAAW,iBAAX;AACA,WAAW,KAAX,CAAiB,IAAI,QAAJ,EAAjB,EAAiC,sBAAjC;;AAEA,MAAM,IAAI,MAAJ,CAAW,KAAX,CAAN;AACA,IAAI,IAAJ,GAAW,iBAAX;AACA,WAAW,KAAX,CAAiB,IAAI,QAAJ,EAAjB,EAAiC,sBAAjC","file":"tst.inherit-compiled.js","sourcesContent":["/*\n * tst.inherit.js: test that inheriting from VError and WError work as expected.\n */\n\nvar mod_assert = require('assert');\nvar mod_util = require('util');\n\nvar mod_verror = require('../lib/verror');\n\nvar VError = mod_verror.VError;\nvar WError = mod_verror.WError;\nvar err, suberr;\n\nfunction VErrorChild()\n{\n\tVError.apply(this, Array.prototype.slice.call(arguments));\n}\n\nmod_util.inherits(VErrorChild, VError);\nVErrorChild.prototype.name = 'VErrorChild';\n\n\nfunction WErrorChild()\n{\n\tWError.apply(this, Array.prototype.slice.call(arguments));\n}\n\nmod_util.inherits(WErrorChild, WError);\nWErrorChild.prototype.name = 'WErrorChild';\n\n\nsuberr = new Error('root cause');\nerr = new VErrorChild(suberr, 'top');\nmod_assert.ok(err instanceof Error);\nmod_assert.ok(err instanceof VError);\nmod_assert.ok(err instanceof VErrorChild);\nmod_assert.equal(err.cause(), suberr);\nmod_assert.equal(err.message, 'top: root cause');\nmod_assert.equal(err.toString(), 'VErrorChild: top: root cause');\nmod_assert.equal(err.stack.split('\\n')[0], 'VErrorChild: top: root cause');\n\nsuberr = new Error('root cause');\nerr = new WErrorChild(suberr, 'top');\nmod_assert.ok(err instanceof Error);\nmod_assert.ok(err instanceof WError);\nmod_assert.ok(err instanceof WErrorChild);\nmod_assert.equal(err.cause(), suberr);\nmod_assert.equal(err.message, 'top');\nmod_assert.equal(err.toString(),\n\t'WErrorChild: top; caused by Error: root cause');\nmod_assert.equal(err.stack.split('\\n')[0],\n\t'WErrorChild: top; caused by Error: root cause');\n\n\n// Test that `<Ctor>.toString()` uses the ctor name. I.e. setting\n// `<Ctor>.prototype.name` isn't necessary.\nfunction VErrorChildNoName() {\n\tVError.apply(this, Array.prototype.slice.call(arguments));\n}\nmod_util.inherits(VErrorChildNoName, VError);\nerr = new VErrorChildNoName('top');\nmod_assert.equal(err.toString(), 'VErrorChildNoName: top');\n\nfunction WErrorChildNoName() {\n\tWError.apply(this, Array.prototype.slice.call(arguments));\n}\nmod_util.inherits(WErrorChildNoName, WError);\nerr = new WErrorChildNoName('top');\nmod_assert.equal(err.toString(), 'WErrorChildNoName: top');\n\n\n// Test that `<Ctor>.prototype.name` can be used for the `.toString()`\n// when the ctor is anonymous.\nvar VErrorChildAnon = function () {\n\tVError.apply(this, Array.prototype.slice.call(arguments));\n};\nmod_util.inherits(VErrorChildAnon, VError);\nVErrorChildAnon.prototype.name = 'VErrorChildAnon';\nerr = new VErrorChildAnon('top');\nmod_assert.equal(err.toString(), 'VErrorChildAnon: top');\n\nvar WErrorChildAnon = function () {\n\tWError.apply(this, Array.prototype.slice.call(arguments));\n};\nmod_util.inherits(WErrorChildAnon, WError);\nWErrorChildAnon.prototype.name = 'WErrorChildAnon';\nerr = new WErrorChildAnon('top');\nmod_assert.equal(err.toString(), 'WErrorChildAnon: top');\n\n\n// Test get appropriate exception name in `.toString()` when reconstituting\n// an error instance a la:\n//    https://github.com/mcavage/node-fast/blob/master/lib/client.js#L215\nerr = new VError('top');\nerr.name = 'CustomNameError';\nmod_assert.equal(err.toString(), 'CustomNameError: top');\n\nerr = new WError('top');\nerr.name = 'CustomNameError';\nmod_assert.equal(err.toString(), 'CustomNameError: top');\n"]}