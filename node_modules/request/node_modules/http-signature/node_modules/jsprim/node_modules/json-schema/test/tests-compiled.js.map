{"version":3,"sources":["tests.js"],"names":[],"mappings":"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","file":"tests-compiled.js","sourcesContent":["var assert = require('assert');\r\nvar vows = require('vows');\r\nvar path = require('path');\r\nvar fs = require('fs');\r\n\r\nvar validate = require('../lib/validate').validate;\r\n\r\n\r\nvar revision = 'draft-03';\r\nvar schemaRoot = path.join(__dirname, '..', revision);\r\nvar schemaNames = ['schema', 'hyper-schema', 'links', 'json-ref' ];\r\nvar schemas = {};\r\n\r\nschemaNames.forEach(function(name) {\r\n    var file = path.join(schemaRoot, name);\r\n    schemas[name] = loadSchema(file);\r\n});\r\n\r\nschemaNames.forEach(function(name) {\r\n    var s, n = name+'-nsd', f = path.join(schemaRoot, name);\r\n    schemas[n] = loadSchema(f);\r\n    s = schemas[n];\r\n    delete s['$schema'];\r\n});\r\n\r\nfunction loadSchema(path) {\r\n    var data = fs.readFileSync(path, 'utf-8');\r\n    var schema = JSON.parse(data);\r\n    return schema;\r\n}\r\n\r\nfunction resultIsValid() {\r\n    return function(result) {\r\n        assert.isObject(result);\r\n        //assert.isBoolean(result.valid);\r\n        assert.equal(typeof(result.valid), 'boolean');\r\n        assert.isArray(result.errors);\r\n        for (var i = 0; i < result.errors.length; i++) {\r\n            assert.notEqual(result.errors[i], null, 'errors['+i+'] is null');\r\n        }\r\n    }\r\n}\r\n\r\nfunction assertValidates(doc, schema) {\r\n    var context = {};\r\n\r\n    context[': validate('+doc+', '+schema+')'] = {\r\n        topic: validate(schemas[doc], schemas[schema]),\r\n        'returns valid result': resultIsValid(),\r\n        'with valid=true': function(result) { assert.equal(result.valid, true); },\r\n        'and no errors':   function(result) {\r\n            // XXX work-around for bug in vows: [null] chokes it\r\n            if (result.errors[0] == null) assert.fail('(errors contains null)');\r\n            assert.length(result.errors, 0);\r\n        }\r\n    };\r\n\r\n    return context;\r\n}\r\n\r\nfunction assertSelfValidates(doc) {\r\n    var context = {};\r\n\r\n    context[': validate('+doc+')'] = {\r\n        topic: validate(schemas[doc]),\r\n        'returns valid result': resultIsValid(),\r\n        'with valid=true': function(result) { assert.equal(result.valid, true); },\r\n        'and no errors':   function(result) { assert.length(result.errors, 0); }\r\n    };\r\n\r\n    return context;\r\n}\r\n\r\nvar suite = vows.describe('JSON Schema').addBatch({\r\n    'Core-NSD self-validates': assertSelfValidates('schema-nsd'),\r\n    'Core-NSD/Core-NSD': assertValidates('schema-nsd', 'schema-nsd'),\r\n    'Core-NSD/Core': assertValidates('schema-nsd', 'schema'),\r\n\r\n    'Core self-validates': assertSelfValidates('schema'),\r\n    'Core/Core': assertValidates('schema', 'schema'),\r\n\r\n    'Hyper-NSD self-validates': assertSelfValidates('hyper-schema-nsd'),\r\n    'Hyper self-validates': assertSelfValidates('hyper-schema'),\r\n    'Hyper/Hyper': assertValidates('hyper-schema', 'hyper-schema'),\r\n    'Hyper/Core': assertValidates('hyper-schema', 'schema'),\r\n\r\n    'Links-NSD self-validates': assertSelfValidates('links-nsd'),\r\n    'Links self-validates': assertSelfValidates('links'),\r\n    'Links/Hyper': assertValidates('links', 'hyper-schema'),\r\n    'Links/Core': assertValidates('links', 'schema'),\r\n\r\n    'Json-Ref self-validates': assertSelfValidates('json-ref'),\r\n    'Json-Ref/Hyper': assertValidates('json-ref', 'hyper-schema'),\r\n    'Json-Ref/Core': assertValidates('json-ref', 'schema')\r\n}).export(module);\r\n"]}