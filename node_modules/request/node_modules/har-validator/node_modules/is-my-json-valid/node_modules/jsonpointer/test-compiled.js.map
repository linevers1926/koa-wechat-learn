{"version":3,"sources":["test.js"],"names":[],"mappings":"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","file":"test-compiled.js","sourcesContent":["var assert = require('assert')\nvar jsonpointer = require('./jsonpointer')\n\nvar obj = {\n  a: 1,\n  b: {\n    c: 2\n  },\n  d: {\n    e: [{ a: 3 }, { b: 4 }, { c: 5 }]\n  }\n}\n\nassert.equal(jsonpointer.get(obj, '/a'), 1)\nassert.equal(jsonpointer.get(obj, '/b/c'), 2)\nassert.equal(jsonpointer.get(obj, '/d/e/0/a'), 3)\nassert.equal(jsonpointer.get(obj, '/d/e/1/b'), 4)\nassert.equal(jsonpointer.get(obj, '/d/e/2/c'), 5)\n\n// set returns old value\nassert.equal(jsonpointer.set(obj, '/a', 2), 1)\nassert.equal(jsonpointer.set(obj, '/b/c', 3), 2)\nassert.equal(jsonpointer.set(obj, '/d/e/0/a', 4), 3)\nassert.equal(jsonpointer.set(obj, '/d/e/1/b', 5), 4)\nassert.equal(jsonpointer.set(obj, '/d/e/2/c', 6), 5)\n\n// set nested properties\nassert.equal(jsonpointer.set(obj, '/f/g/h/i', 6), undefined)\nassert.equal(jsonpointer.get(obj, '/f/g/h/i'), 6)\n\n// set an array\nassert.equal(jsonpointer.set(obj, '/f/g/h/foo/-', 'test'), undefined)\nvar arr = jsonpointer.get(obj, '/f/g/h/foo')\nassert(Array.isArray(arr), 'set /- creates an array.')\nassert.equal(arr[0], 'test')\n\nassert.equal(jsonpointer.get(obj, '/a'), 2)\nassert.equal(jsonpointer.get(obj, '/b/c'), 3)\nassert.equal(jsonpointer.get(obj, '/d/e/0/a'), 4)\nassert.equal(jsonpointer.get(obj, '/d/e/1/b'), 5)\nassert.equal(jsonpointer.get(obj, '/d/e/2/c'), 6)\n\n// can set `null` as a value\nassert.equal(jsonpointer.set(obj, '/f/g/h/foo/0', null), 'test')\nassert.strictEqual(jsonpointer.get(obj, '/f/g/h/foo/0'), null)\nassert.equal(jsonpointer.set(obj, '/b/c', null), 3)\nassert.strictEqual(jsonpointer.get(obj, '/b/c'), null)\n\nassert.equal(jsonpointer.get(obj, ''), obj)\nassert.throws(function () { jsonpointer.get(obj, 'a') }, validateError)\nassert.throws(function () { jsonpointer.get(obj, 'a/') }, validateError)\n\n// can unset values with `undefined`\njsonpointer.set(obj, '/a', undefined)\nassert.strictEqual(jsonpointer.get(obj, '/a'), undefined)\njsonpointer.set(obj, '/d/e/1', undefined)\nassert.strictEqual(jsonpointer.get(obj, '/d/e/1'), undefined)\n\n// returns `undefined` when path extends beyond any existing objects\nassert.strictEqual(jsonpointer.get(obj, '/x/y/z'), undefined)\n\nfunction validateError (err) {\n  if ((err instanceof Error) && /Invalid JSON pointer/.test(err.message)) {\n    return true\n  }\n}\n\nvar complexKeys = {\n  'a/b': {\n    c: 1\n  },\n  d: {\n    'e/f': 2\n  },\n  '~1': 3,\n  '01': 4\n}\n\nassert.equal(jsonpointer.get(complexKeys, '/a~1b/c'), 1)\nassert.equal(jsonpointer.get(complexKeys, '/d/e~1f'), 2)\nassert.equal(jsonpointer.get(complexKeys, '/~01'), 3)\nassert.equal(jsonpointer.get(complexKeys, '/01'), 4)\nassert.equal(jsonpointer.get(complexKeys, '/a/b/c'), null)\nassert.equal(jsonpointer.get(complexKeys, '/~1'), null)\n\n// draft-ietf-appsawg-json-pointer-08 has special array rules\nvar ary = [ 'zero', 'one', 'two' ]\nassert.equal(jsonpointer.get(ary, '/01'), null)\n\nassert.equal(jsonpointer.set(ary, '/-', 'three'), null)\nassert.equal(ary[3], 'three')\n\n// Examples from the draft:\nvar example = {\n  'foo': ['bar', 'baz'],\n  '': 0,\n  'a/b': 1,\n  'c%d': 2,\n  'e^f': 3,\n  'g|h': 4,\n  'i\\\\j': 5,\n  'k\\'l': 6,\n  ' ': 7,\n  'm~n': 8\n}\n\nassert.equal(jsonpointer.get(example, ''), example)\nvar ans = jsonpointer.get(example, '/foo')\nassert.equal(ans.length, 2)\nassert.equal(ans[0], 'bar')\nassert.equal(ans[1], 'baz')\nassert.equal(jsonpointer.get(example, '/foo/0'), 'bar')\nassert.equal(jsonpointer.get(example, '/'), 0)\nassert.equal(jsonpointer.get(example, '/a~1b'), 1)\nassert.equal(jsonpointer.get(example, '/c%d'), 2)\nassert.equal(jsonpointer.get(example, '/e^f'), 3)\nassert.equal(jsonpointer.get(example, '/g|h'), 4)\nassert.equal(jsonpointer.get(example, '/i\\\\j'), 5)\nassert.equal(jsonpointer.get(example, '/k\\'l'), 6)\nassert.equal(jsonpointer.get(example, '/ '), 7)\nassert.equal(jsonpointer.get(example, '/m~0n'), 8)\n\n// jsonpointer.compile(path)\nvar a = {foo: 'bar'}\nvar pointer = jsonpointer.compile('/foo')\nassert.equal(pointer.get(a), 'bar')\nassert.equal(pointer.set(a, 'test'), 'bar')\nassert.equal(pointer.get(a), 'test')\nassert.deepEqual(a, {foo: 'test'})\n\nconsole.log('All tests pass.')\n"]}