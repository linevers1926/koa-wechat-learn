{"version":3,"sources":["example.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,IAAR,CAAb;;AAEA,IAAI,WAAW,UAAS,CAAT,EAAY,CAAZ,EAAe;AAC5B,SAAO,IAAI,CAAX;AACD,CAFD;;AAIA,IAAI,uBAAuB,UAAS,GAAT,EAAc;AACvC,MAAI,KAAK,SACN,eADM,EAEJ,8BAFI,C;AAAA,GAGF,gDAHE,EAIJ,GAJI,EAKJ,iCALI,EAK+B,GAL/B,EAKoC,GALpC,EAMJ,eANI,EAON,GAPM,CAAT;;;;AAWA,SAAO,GAAG,UAAH,CAAc;AACnB,cAAU;AADS,GAAd,CAAP;AAGD,CAfD;;AAiBA,IAAI,kBAAkB,qBAAqB,CAArB,CAAtB;;AAEA,QAAQ,GAAR,CAAY,gBAAgB,QAAhB,EAAZ;AACA,QAAQ,GAAR,CAAY,eAAZ,EAA6B,gBAAgB,CAAhB,CAA7B","file":"example-compiled.js","sourcesContent":["var genfun = require('./')\n\nvar multiply = function(a, b) {\n  return a * b\n}\n\nvar addAndMultiplyNumber = function(val) {\n  var fn = genfun()\n    ('function(n) {')\n      ('if (typeof n !== \"number\") {') // ending a line with { will indent the source\n        ('throw new Error(\"argument should be a number\")')\n      ('}')\n      ('var result = multiply(%d, n+%d)', val, val)\n      ('return result')\n    ('}')\n\n  // use fn.toString() if you want to see the generated source\n\n  return fn.toFunction({\n    multiply: multiply\n  })\n}\n\nvar addAndMultiply2 = addAndMultiplyNumber(2)\n\nconsole.log(addAndMultiply2.toString())\nconsole.log('(3 + 2) * 2 =', addAndMultiply2(3))"]}