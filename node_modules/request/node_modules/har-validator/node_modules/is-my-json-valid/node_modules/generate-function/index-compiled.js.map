{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA,IAAI,eAAe,QAAnB;AACA,IAAI,aAAa,QAAjB;;AAEA,OAAO,OAAP,GAAiB,YAAW;AAC1B,MAAI,QAAQ,EAAZ;AACA,MAAI,SAAS,CAAb;;AAEA,MAAI,OAAO,UAAS,GAAT,EAAc;AACvB,QAAI,SAAS,EAAb;AACA,WAAO,OAAO,MAAP,GAAgB,SAAO,CAA9B,EAAiC,UAAU,IAAV;AACjC,UAAM,IAAN,CAAW,SAAO,GAAlB;AACD,GAJD;;AAMA,MAAI,OAAO,UAAS,GAAT,EAAc;AACvB,QAAI,CAAC,GAAL,EAAU,OAAO,IAAP;;AAEV,QAAI,WAAW,IAAX,CAAgB,IAAI,IAAJ,GAAW,CAAX,CAAhB,KAAkC,aAAa,IAAb,CAAkB,IAAI,IAAI,MAAJ,GAAW,CAAf,CAAlB,CAAtC,EAA4E;AAC1E;AACA,WAAK,KAAK,MAAL,CAAY,KAAZ,CAAkB,IAAlB,EAAwB,SAAxB,CAAL;AACA;AACA,aAAO,IAAP;AACD;AACD,QAAI,aAAa,IAAb,CAAkB,IAAI,IAAI,MAAJ,GAAW,CAAf,CAAlB,CAAJ,EAA0C;AACxC,WAAK,KAAK,MAAL,CAAY,KAAZ,CAAkB,IAAlB,EAAwB,SAAxB,CAAL;AACA;AACA,aAAO,IAAP;AACD;AACD,QAAI,WAAW,IAAX,CAAgB,IAAI,IAAJ,GAAW,CAAX,CAAhB,CAAJ,EAAoC;AAClC;AACA,WAAK,KAAK,MAAL,CAAY,KAAZ,CAAkB,IAAlB,EAAwB,SAAxB,CAAL;AACA,aAAO,IAAP;AACD;;AAED,SAAK,KAAK,MAAL,CAAY,KAAZ,CAAkB,IAAlB,EAAwB,SAAxB,CAAL;AACA,WAAO,IAAP;AACD,GAtBD;;AAwBA,OAAK,QAAL,GAAgB,YAAW;AACzB,WAAO,MAAM,IAAN,CAAW,IAAX,CAAP;AACD,GAFD;;AAIA,OAAK,UAAL,GAAkB,UAAS,KAAT,EAAgB;AAChC,QAAI,MAAM,aAAW,KAAK,QAAL,EAAX,GAA2B,GAArC;;AAEA,QAAI,OAAO,OAAO,IAAP,CAAY,SAAS,EAArB,EAAyB,GAAzB,CAA6B,UAAS,GAAT,EAAc;AACpD,aAAO,GAAP;AACD,KAFU,CAAX;;AAIA,QAAI,OAAO,KAAK,GAAL,CAAS,UAAS,GAAT,EAAc;AAChC,aAAO,MAAM,GAAN,CAAP;AACD,KAFU,CAAX;;AAIA,WAAO,SAAS,KAAT,CAAe,IAAf,EAAqB,KAAK,MAAL,CAAY,GAAZ,CAArB,EAAuC,KAAvC,CAA6C,IAA7C,EAAmD,IAAnD,CAAP;AACD,GAZD;;AAcA,MAAI,UAAU,MAAd,EAAsB,KAAK,KAAL,CAAW,IAAX,EAAiB,SAAjB;;AAEtB,SAAO,IAAP;AACD,CAvDD","file":"index-compiled.js","sourcesContent":["var util = require('util')\n\nvar INDENT_START = /[\\{\\[]/\nvar INDENT_END = /[\\}\\]]/\n\nmodule.exports = function() {\n  var lines = []\n  var indent = 0\n\n  var push = function(str) {\n    var spaces = ''\n    while (spaces.length < indent*2) spaces += '  '\n    lines.push(spaces+str)\n  }\n\n  var line = function(fmt) {\n    if (!fmt) return line\n\n    if (INDENT_END.test(fmt.trim()[0]) && INDENT_START.test(fmt[fmt.length-1])) {\n      indent--\n      push(util.format.apply(util, arguments))\n      indent++\n      return line\n    }\n    if (INDENT_START.test(fmt[fmt.length-1])) {\n      push(util.format.apply(util, arguments))\n      indent++\n      return line\n    }\n    if (INDENT_END.test(fmt.trim()[0])) {\n      indent--\n      push(util.format.apply(util, arguments))\n      return line\n    }\n\n    push(util.format.apply(util, arguments))\n    return line\n  }\n\n  line.toString = function() {\n    return lines.join('\\n')\n  }\n\n  line.toFunction = function(scope) {\n    var src = 'return ('+line.toString()+')'\n\n    var keys = Object.keys(scope || {}).map(function(key) {\n      return key\n    })\n\n    var vals = keys.map(function(key) {\n      return scope[key]\n    })\n\n    return Function.apply(null, keys.concat(src)).apply(null, vals)\n  }\n\n  if (arguments.length) line.apply(null, arguments)\n\n  return line\n}\n"]}