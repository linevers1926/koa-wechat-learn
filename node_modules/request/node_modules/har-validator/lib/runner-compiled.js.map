{"version":3,"sources":["runner.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,UAAU,QAAQ,WAAR,CAAd;AACA,IAAI,kBAAkB,QAAQ,SAAR,CAAtB;AACA,IAAI,YAAY,QAAQ,kBAAR,CAAhB;;AAEA,OAAO,OAAP,GAAiB,UAAU,MAAV,EAAkB,IAAlB,EAAwB,EAAxB,EAA4B;;AAE3C,MAAI,QAAQ,KAAZ;;;AAGA,MAAI,WAAW,UAAU,MAAV,EAAkB;AAC/B,YAAQ,IADuB;AAE/B,aAAS,IAFsB;AAG/B,aAAS;AAHsB,GAAlB,CAAf;;;AAOA,MAAI,SAAS,SAAb,EAAwB;AACtB,YAAQ,SAAS,IAAT,CAAR;AACD;;;AAGD,MAAI,OAAO,EAAP,KAAc,UAAlB,EAA8B;AAC5B,WAAO,GAAG,SAAS,MAAT,GAAkB,IAAI,eAAJ,CAAoB,SAAS,MAA7B,CAAlB,GAAyD,IAA5D,EAAkE,KAAlE,CAAP;AACD;;AAED,SAAO,KAAP;AACD,CAtBD","file":"runner-compiled.js","sourcesContent":["'use strict'\n\nvar schemas = require('./schemas')\nvar ValidationError = require('./error')\nvar validator = require('is-my-json-valid')\n\nmodule.exports = function (schema, data, cb) {\n  // default value\n  var valid = false\n\n  // validator config\n  var validate = validator(schema, {\n    greedy: true,\n    verbose: true,\n    schemas: schemas\n  })\n\n  // execute is-my-json-valid\n  if (data !== undefined) {\n    valid = validate(data)\n  }\n\n  // callback?\n  if (typeof cb === 'function') {\n    return cb(validate.errors ? new ValidationError(validate.errors) : null, valid)\n  }\n\n  return valid\n}\n"]}