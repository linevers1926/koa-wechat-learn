{"version":3,"sources":["memstore.js"],"names":[],"mappings":"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","file":"memstore-compiled.js","sourcesContent":["/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\nvar Store = require('./store').Store;\nvar permuteDomain = require('./permuteDomain').permuteDomain;\nvar pathMatch = require('./pathMatch').pathMatch;\nvar util = require('util');\n\nfunction MemoryCookieStore() {\n  Store.call(this);\n  this.idx = {};\n}\nutil.inherits(MemoryCookieStore, Store);\nexports.MemoryCookieStore = MemoryCookieStore;\nMemoryCookieStore.prototype.idx = null;\n\n// Since it's just a struct in RAM, this Store is synchronous\nMemoryCookieStore.prototype.synchronous = true;\n\n// force a default depth:\nMemoryCookieStore.prototype.inspect = function() {\n  return \"{ idx: \"+util.inspect(this.idx, false, 2)+' }';\n};\n\nMemoryCookieStore.prototype.findCookie = function(domain, path, key, cb) {\n  if (!this.idx[domain]) {\n    return cb(null,undefined);\n  }\n  if (!this.idx[domain][path]) {\n    return cb(null,undefined);\n  }\n  return cb(null,this.idx[domain][path][key]||null);\n};\n\nMemoryCookieStore.prototype.findCookies = function(domain, path, cb) {\n  var results = [];\n  if (!domain) {\n    return cb(null,[]);\n  }\n\n  var pathMatcher;\n  if (!path) {\n    // null means \"all paths\"\n    pathMatcher = function matchAll(domainIndex) {\n      for (var curPath in domainIndex) {\n        var pathIndex = domainIndex[curPath];\n        for (var key in pathIndex) {\n          results.push(pathIndex[key]);\n        }\n      }\n    };\n\n  } else {\n    pathMatcher = function matchRFC(domainIndex) {\n       //NOTE: we should use path-match algorithm from S5.1.4 here\n       //(see : https://github.com/ChromiumWebApps/chromium/blob/b3d3b4da8bb94c1b2e061600df106d590fda3620/net/cookies/canonical_cookie.cc#L299)\n       Object.keys(domainIndex).forEach(function (cookiePath) {\n         if (pathMatch(path, cookiePath)) {\n           var pathIndex = domainIndex[cookiePath];\n\n           for (var key in pathIndex) {\n             results.push(pathIndex[key]);\n           }\n         }\n       });\n     };\n  }\n\n  var domains = permuteDomain(domain) || [domain];\n  var idx = this.idx;\n  domains.forEach(function(curDomain) {\n    var domainIndex = idx[curDomain];\n    if (!domainIndex) {\n      return;\n    }\n    pathMatcher(domainIndex);\n  });\n\n  cb(null,results);\n};\n\nMemoryCookieStore.prototype.putCookie = function(cookie, cb) {\n  if (!this.idx[cookie.domain]) {\n    this.idx[cookie.domain] = {};\n  }\n  if (!this.idx[cookie.domain][cookie.path]) {\n    this.idx[cookie.domain][cookie.path] = {};\n  }\n  this.idx[cookie.domain][cookie.path][cookie.key] = cookie;\n  cb(null);\n};\n\nMemoryCookieStore.prototype.updateCookie = function(oldCookie, newCookie, cb) {\n  // updateCookie() may avoid updating cookies that are identical.  For example,\n  // lastAccessed may not be important to some stores and an equality\n  // comparison could exclude that field.\n  this.putCookie(newCookie,cb);\n};\n\nMemoryCookieStore.prototype.removeCookie = function(domain, path, key, cb) {\n  if (this.idx[domain] && this.idx[domain][path] && this.idx[domain][path][key]) {\n    delete this.idx[domain][path][key];\n  }\n  cb(null);\n};\n\nMemoryCookieStore.prototype.removeCookies = function(domain, path, cb) {\n  if (this.idx[domain]) {\n    if (path) {\n      delete this.idx[domain][path];\n    } else {\n      delete this.idx[domain];\n    }\n  }\n  return cb(null);\n};\n\nMemoryCookieStore.prototype.getAllCookies = function(cb) {\n  var cookies = [];\n  var idx = this.idx;\n\n  var domains = Object.keys(idx);\n  domains.forEach(function(domain) {\n    var paths = Object.keys(idx[domain]);\n    paths.forEach(function(path) {\n      var keys = Object.keys(idx[domain][path]);\n      keys.forEach(function(key) {\n        if (key !== null) {\n          cookies.push(idx[domain][path][key]);\n        }\n      });\n    });\n  });\n\n  // Sort by creationIndex so deserializing retains the creation order.\n  // When implementing your own store, this SHOULD retain the order too\n  cookies.sort(function(a,b) {\n    return (a.creationIndex||0) - (b.creationIndex||0);\n  });\n\n  cb(null, cookies);\n};\n"]}