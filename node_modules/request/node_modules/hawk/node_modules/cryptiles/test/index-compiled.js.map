{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["// Load modules\n\nvar Code = require('code');\nvar Cryptiles = require('..');\nvar Lab = require('lab');\n\n\n// Declare internals\n\nvar internals = {};\n\n\n// Test shortcuts\n\nvar lab = exports.lab = Lab.script();\nvar describe = lab.describe;\nvar it = lab.it;\nvar expect = Code.expect;\n\n\ndescribe('randomString()', function () {\n\n    it('should generate the right length string', function (done) {\n\n        for (var i = 1; i <= 1000; ++i) {\n            expect(Cryptiles.randomString(i).length).to.equal(i);\n        }\n\n        done();\n    });\n\n    it('returns an error on invalid bits size', function (done) {\n\n        expect(Cryptiles.randomString(99999999999999999999).message).to.match(/Failed generating random bits/);\n        done();\n    });\n});\n\ndescribe('randomBits()', function () {\n\n    it('returns an error on invalid input', function (done) {\n\n        expect(Cryptiles.randomBits(0).message).to.equal('Invalid random bits count');\n        done();\n    });\n});\n\ndescribe('fixedTimeComparison()', function () {\n\n    var a = Cryptiles.randomString(50000);\n    var b = Cryptiles.randomString(150000);\n\n    it('should take the same amount of time comparing different string sizes', function (done) {\n\n        var now = Date.now();\n        Cryptiles.fixedTimeComparison(b, a);\n        var t1 = Date.now() - now;\n\n        now = Date.now();\n        Cryptiles.fixedTimeComparison(b, b);\n        var t2 = Date.now() - now;\n\n        expect(t2 - t1).to.be.within(-20, 20);\n        done();\n    });\n\n    it('should return true for equal strings', function (done) {\n\n        expect(Cryptiles.fixedTimeComparison(a, a)).to.equal(true);\n        done();\n    });\n\n    it('should return false for different strings (size, a < b)', function (done) {\n\n        expect(Cryptiles.fixedTimeComparison(a, a + 'x')).to.equal(false);\n        done();\n    });\n\n    it('should return false for different strings (size, a > b)', function (done) {\n\n        expect(Cryptiles.fixedTimeComparison(a + 'x', a)).to.equal(false);\n        done();\n    });\n\n    it('should return false for different strings (size, a = b)', function (done) {\n\n        expect(Cryptiles.fixedTimeComparison(a + 'x', a + 'y')).to.equal(false);\n        done();\n    });\n\n    it('should return false when not a string', function (done) {\n\n        expect(Cryptiles.fixedTimeComparison('x', null)).to.equal(false);\n        done();\n    });\n\n    it('should return false when not a string (left)', function (done) {\n\n        expect(Cryptiles.fixedTimeComparison(null, 'x')).to.equal(false);\n        done();\n    });\n});\n"]}