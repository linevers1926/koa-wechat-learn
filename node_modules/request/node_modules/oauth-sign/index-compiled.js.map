{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,QAAR,CAAb;IACI,KAAK,QAAQ,aAAR,CADT;;AAIA,SAAS,IAAT,CAAe,GAAf,EAAoB,IAApB,EAA0B;AACxB,SAAO,OAAO,UAAP,CAAkB,MAAlB,EAA0B,GAA1B,EAA+B,MAA/B,CAAsC,IAAtC,EAA4C,MAA5C,CAAmD,QAAnD,CAAP;AACD;;AAED,SAAS,GAAT,CAAc,GAAd,EAAmB,IAAnB,EAAyB;AACvB,SAAO,OAAO,UAAP,CAAkB,UAAlB,EAA8B,MAA9B,CAAqC,IAArC,EAA2C,IAA3C,CAAgD,GAAhD,EAAqD,QAArD,CAAP;AACD;;AAED,SAAS,OAAT,CAAkB,GAAlB,EAAuB;AACrB,SAAO,mBAAmB,GAAnB,EACJ,OADI,CACI,IADJ,EACS,KADT,EAEJ,OAFI,CAEI,KAFJ,EAEU,KAFV,EAGJ,OAHI,CAGI,KAHJ,EAGU,KAHV,EAIJ,OAJI,CAII,KAJJ,EAIU,KAJV,EAKJ,OALI,CAKI,IALJ,EAKS,KALT,CAAP;AAOD;;;;;AAKD,SAAS,GAAT,CAAc,GAAd,EAAmB;AACjB,MAAI,GAAJ;MAAS,GAAT;MAAc,MAAM,EAApB;AACA,OAAK,GAAL,IAAY,GAAZ,EAAiB;AACf,UAAM,IAAI,GAAJ,CAAN;AACA,QAAI,MAAM,OAAN,CAAc,GAAd,CAAJ,EACE,KAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,IAAI,MAAxB,EAAgC,GAAhC,EACE,IAAI,IAAJ,CAAS,CAAC,GAAD,EAAM,IAAI,CAAJ,CAAN,CAAT,EAFJ,KAGK,IAAI,OAAO,GAAP,KAAe,QAAnB,EACH,KAAK,IAAI,IAAT,IAAiB,GAAjB,EACE,IAAI,IAAJ,CAAS,CAAC,MAAM,GAAN,GAAY,IAAZ,GAAmB,GAApB,EAAyB,IAAI,IAAJ,CAAzB,CAAT,EAFC,KAIH,IAAI,IAAJ,CAAS,CAAC,GAAD,EAAM,GAAN,CAAT;AACH;AACD,SAAO,GAAP;AACD;;;AAGD,SAAS,OAAT,CAAkB,CAAlB,EAAqB,CAArB,EAAwB;AACtB,SAAO,IAAI,CAAJ,GAAQ,CAAR,GAAY,IAAI,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAAhC;AACD;;AAED,SAAS,YAAT,CAAuB,UAAvB,EAAmC,QAAnC,EAA6C,MAA7C,EAAqD;;;;;;AAMnD,MAAI,aAAa,IAAI,MAAJ;;AAAA,GAEhB,GAFgB,CAEZ,UAAU,CAAV,EAAa;AAChB,WAAO,CAAE,QAAQ,EAAE,CAAF,CAAR,CAAF,EAAiB,QAAQ,EAAE,CAAF,KAAQ,EAAhB,CAAjB,CAAP;AACD,GAJgB;;;;AAAA,GAQhB,IARgB,CAQX,UAAU,CAAV,EAAa,CAAb,EAAgB;AACpB,WAAO,QAAQ,EAAE,CAAF,CAAR,EAAc,EAAE,CAAF,CAAd,KAAuB,QAAQ,EAAE,CAAF,CAAR,EAAc,EAAE,CAAF,CAAd,CAA9B;AACD,GAVgB;;;;AAAA,GAchB,GAdgB,CAcZ,UAAU,CAAV,EAAa;AAAE,WAAO,EAAE,IAAF,CAAO,GAAP,CAAP;AAAoB,GAdvB;;;;AAAA,GAkBhB,IAlBgB,CAkBX,GAlBW,CAAjB;;AAoBA,MAAI,OAAO,CACT,QAAQ,aAAa,WAAW,WAAX,EAAb,GAAwC,KAAhD,CADS,EAET,QAAQ,QAAR,CAFS,EAGT,QAAQ,UAAR,CAHS,EAIT,IAJS,CAIJ,GAJI,CAAX;;AAMA,SAAO,IAAP;AACD;;AAED,SAAS,QAAT,CAAmB,UAAnB,EAA+B,QAA/B,EAAyC,MAAzC,EAAiD,eAAjD,EAAkE,YAAlE,EAAgF;AAC9E,MAAI,OAAO,aAAa,UAAb,EAAyB,QAAzB,EAAmC,MAAnC,CAAX;AACA,MAAI,MAAM,CACR,mBAAmB,EADX,EAER,gBAAgB,EAFR,EAGR,GAHQ,CAGJ,OAHI,EAGK,IAHL,CAGU,GAHV,CAAV;;AAKA,SAAO,KAAK,GAAL,EAAU,IAAV,CAAP;AACD;;AAED,SAAS,OAAT,CAAkB,UAAlB,EAA8B,QAA9B,EAAwC,MAAxC,EAAgD,WAAhD,EAA6D,YAA7D,EAA2E;AACzE,MAAI,OAAO,aAAa,UAAb,EAAyB,QAAzB,EAAmC,MAAnC,CAAX;AACA,MAAI,MAAM,eAAe,EAAzB;;AAEA,SAAO,IAAI,GAAJ,EAAS,IAAT,CAAP;AACD;;AAED,SAAS,SAAT,CAAoB,eAApB,EAAqC,YAArC,EAAmD;AACjD,MAAI,MAAM,CACR,mBAAmB,EADX,EAER,gBAAgB,EAFR,EAGR,GAHQ,CAGJ,OAHI,EAGK,IAHL,CAGU,GAHV,CAAV;;AAKA,SAAO,GAAP;AACD;;AAED,SAAS,IAAT,CAAe,UAAf,EAA2B,UAA3B,EAAuC,QAAvC,EAAiD,MAAjD,EAAyD,eAAzD,EAA0E,YAA1E,EAAwF;AACtF,MAAI,MAAJ;AACA,MAAI,WAAW,CAAf;;AAEA,UAAQ,UAAR;AACE,SAAK,UAAL;AACE,eAAS,OAAT;AACA;AACF,SAAK,WAAL;AACE,eAAS,QAAT;AACA;AACF,SAAK,WAAL;AACE,eAAS,SAAT;AACA,iBAAW,CAAX;AACA;AACF;AACC,YAAM,IAAI,KAAJ,CAAU,qCAAqC,UAA/C,CAAN;AAZH;;AAeA,SAAO,OAAO,KAAP,CAAa,IAAb,EAAmB,GAAG,KAAH,CAAS,IAAT,CAAc,SAAd,EAAyB,QAAzB,CAAnB,CAAP;AACD;;AAED,QAAQ,QAAR,GAAmB,QAAnB;AACA,QAAQ,OAAR,GAAkB,OAAlB;AACA,QAAQ,SAAR,GAAoB,SAApB;AACA,QAAQ,IAAR,GAAe,IAAf;AACA,QAAQ,OAAR,GAAkB,OAAlB;AACA,QAAQ,YAAR,GAAuB,YAAvB","file":"index-compiled.js","sourcesContent":["var crypto = require('crypto')\n  , qs = require('querystring')\n  ;\n\nfunction sha1 (key, body) {\n  return crypto.createHmac('sha1', key).update(body).digest('base64')\n}\n\nfunction rsa (key, body) {\n  return crypto.createSign(\"RSA-SHA1\").update(body).sign(key, 'base64');\n}\n\nfunction rfc3986 (str) {\n  return encodeURIComponent(str)\n    .replace(/!/g,'%21')\n    .replace(/\\*/g,'%2A')\n    .replace(/\\(/g,'%28')\n    .replace(/\\)/g,'%29')\n    .replace(/'/g,'%27')\n    ;\n}\n\n// Maps object to bi-dimensional array\n// Converts { foo: 'A', bar: [ 'b', 'B' ]} to\n// [ ['foo', 'A'], ['bar', 'b'], ['bar', 'B'] ]\nfunction map (obj) {\n  var key, val, arr = []\n  for (key in obj) {\n    val = obj[key]\n    if (Array.isArray(val))\n      for (var i = 0; i < val.length; i++)\n        arr.push([key, val[i]])\n    else if (typeof val === \"object\")\n      for (var prop in val)\n        arr.push([key + '[' + prop + ']', val[prop]]);\n    else\n      arr.push([key, val])\n  }\n  return arr\n}\n\n// Compare function for sort\nfunction compare (a, b) {\n  return a > b ? 1 : a < b ? -1 : 0\n}\n\nfunction generateBase (httpMethod, base_uri, params) {\n  // adapted from https://dev.twitter.com/docs/auth/oauth and \n  // https://dev.twitter.com/docs/auth/creating-signature\n\n  // Parameter normalization\n  // http://tools.ietf.org/html/rfc5849#section-3.4.1.3.2\n  var normalized = map(params)\n  // 1.  First, the name and value of each parameter are encoded\n  .map(function (p) {\n    return [ rfc3986(p[0]), rfc3986(p[1] || '') ]\n  })\n  // 2.  The parameters are sorted by name, using ascending byte value\n  //     ordering.  If two or more parameters share the same name, they\n  //     are sorted by their value.\n  .sort(function (a, b) {\n    return compare(a[0], b[0]) || compare(a[1], b[1])\n  })\n  // 3.  The name of each parameter is concatenated to its corresponding\n  //     value using an \"=\" character (ASCII code 61) as a separator, even\n  //     if the value is empty.\n  .map(function (p) { return p.join('=') })\n   // 4.  The sorted name/value pairs are concatenated together into a\n   //     single string by using an \"&\" character (ASCII code 38) as\n   //     separator.\n  .join('&')\n\n  var base = [\n    rfc3986(httpMethod ? httpMethod.toUpperCase() : 'GET'),\n    rfc3986(base_uri),\n    rfc3986(normalized)\n  ].join('&')\n\n  return base\n}\n\nfunction hmacsign (httpMethod, base_uri, params, consumer_secret, token_secret) {\n  var base = generateBase(httpMethod, base_uri, params)\n  var key = [\n    consumer_secret || '',\n    token_secret || ''\n  ].map(rfc3986).join('&')\n\n  return sha1(key, base)\n}\n\nfunction rsasign (httpMethod, base_uri, params, private_key, token_secret) {\n  var base = generateBase(httpMethod, base_uri, params)\n  var key = private_key || ''\n\n  return rsa(key, base)\n}\n\nfunction plaintext (consumer_secret, token_secret) {\n  var key = [\n    consumer_secret || '',\n    token_secret || ''\n  ].map(rfc3986).join('&')\n\n  return key\n}\n\nfunction sign (signMethod, httpMethod, base_uri, params, consumer_secret, token_secret) {\n  var method\n  var skipArgs = 1\n\n  switch (signMethod) {\n    case 'RSA-SHA1':\n      method = rsasign\n      break\n    case 'HMAC-SHA1':\n      method = hmacsign\n      break\n    case 'PLAINTEXT':\n      method = plaintext\n      skipArgs = 4\n      break\n    default:\n     throw new Error(\"Signature method not supported: \" + signMethod)\n  }\n\n  return method.apply(null, [].slice.call(arguments, skipArgs))\n}\n\nexports.hmacsign = hmacsign\nexports.rsasign = rsasign\nexports.plaintext = plaintext\nexports.sign = sign\nexports.rfc3986 = rfc3986\nexports.generateBase = generateBase\n\n"]}