{"version":3,"sources":["serialOrdered.js"],"names":[],"mappings":"AAAA,IAAI,UAAa,QAAQ,kBAAR,CAAjB;IACI,YAAa,QAAQ,gBAAR,CADjB;IAEI,aAAa,QAAQ,qBAAR,CAFjB;;;AAMA,OAAO,OAAP,GAAiB,aAAjB;;AAEA,OAAO,OAAP,CAAe,SAAf,GAA4B,SAA5B;AACA,OAAO,OAAP,CAAe,UAAf,GAA4B,UAA5B;;;;;;;;;;;AAWA,SAAS,aAAT,CAAuB,IAAvB,EAA6B,QAA7B,EAAuC,UAAvC,EAAmD,QAAnD,EACA;AACE,MAAI,QAAQ,UAAU,IAAV,EAAgB,UAAhB,CAAZ;;AAEA,UAAQ,IAAR,EAAc,QAAd,EAAwB,KAAxB,EAA+B,SAAS,eAAT,CAAyB,KAAzB,EAAgC,MAAhC,EAC/B;AACE,QAAI,KAAJ,EACA;AACE,eAAS,KAAT,EAAgB,MAAhB;AACA;AACD;;AAED,UAAM,KAAN;;;AAGA,QAAI,MAAM,KAAN,GAAc,CAAC,MAAM,WAAN,KAAsB,IAAvB,EAA6B,MAA/C,EACA;AACE,cAAQ,IAAR,EAAc,QAAd,EAAwB,KAAxB,EAA+B,eAA/B;AACA;AACD;;;AAGD,aAAS,IAAT,EAAe,MAAM,OAArB;AACD,GAnBD;;AAqBA,SAAO,WAAW,IAAX,CAAgB,KAAhB,EAAuB,QAAvB,CAAP;AACD;;;;;;;;;;;;;AAaD,SAAS,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,EACA;AACE,SAAO,IAAI,CAAJ,GAAQ,CAAC,CAAT,GAAa,IAAI,CAAJ,GAAQ,CAAR,GAAY,CAAhC;AACD;;;;;;;;;AASD,SAAS,UAAT,CAAoB,CAApB,EAAuB,CAAvB,EACA;AACE,SAAO,CAAC,CAAD,GAAK,UAAU,CAAV,EAAa,CAAb,CAAZ;AACD","file":"serialOrdered-compiled.js","sourcesContent":["var iterate    = require('./lib/iterate.js')\n  , initState  = require('./lib/state.js')\n  , terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = serialOrdered;\n// sorting helpers\nmodule.exports.ascending  = ascending;\nmodule.exports.descending = descending;\n\n/**\n * Runs iterator over provided sorted array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} sortMethod - custom sort function\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serialOrdered(list, iterator, sortMethod, callback)\n{\n  var state = initState(list, sortMethod);\n\n  iterate(list, iterator, state, function iteratorHandler(error, result)\n  {\n    if (error)\n    {\n      callback(error, result);\n      return;\n    }\n\n    state.index++;\n\n    // are we there yet?\n    if (state.index < (state['keyedList'] || list).length)\n    {\n      iterate(list, iterator, state, iteratorHandler);\n      return;\n    }\n\n    // done here\n    callback(null, state.results);\n  });\n\n  return terminator.bind(state, callback);\n}\n\n/*\n * -- Sort methods\n */\n\n/**\n * sort helper to sort array elements in ascending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction ascending(a, b)\n{\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\n/**\n * sort helper to sort array elements in descending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction descending(a, b)\n{\n  return -1 * ascending(a, b);\n}\n"]}