{"version":3,"sources":["state.js"],"names":[],"mappings":";AACA,OAAO,OAAP,GAAiB,KAAjB;;;;;;;;;;;AAWA,SAAS,KAAT,CAAe,IAAf,EAAqB,UAArB,EACA;AACE,MAAI,cAAc,CAAC,MAAM,OAAN,CAAc,IAAd,CAAnB;MACI,YACF;AACE,WAAW,CADb;AAEE,eAAW,eAAe,UAAf,GAA4B,OAAO,IAAP,CAAY,IAAZ,CAA5B,GAAgD,IAF7D;AAGE,UAAW,EAHb;AAIE,aAAW,cAAc,EAAd,GAAmB,EAJhC;AAKE,UAAW,cAAc,OAAO,IAAP,CAAY,IAAZ,EAAkB,MAAhC,GAAyC,KAAK;AAL3D,GAFF;;AAWA,MAAI,UAAJ,EACA;;;AAGE,cAAU,SAAV,CAAoB,IAApB,CAAyB,cAAc,UAAd,GAA2B,UAAS,CAAT,EAAY,CAAZ,EACpD;AACE,aAAO,WAAW,KAAK,CAAL,CAAX,EAAoB,KAAK,CAAL,CAApB,CAAP;AACD,KAHD;AAID;;AAED,SAAO,SAAP;AACD","file":"state-compiled.js","sourcesContent":["// API\nmodule.exports = state;\n\n/**\n * Creates initial state object\n * for iteration over list\n *\n * @param   {array|object} list - list to iterate over\n * @param   {function|null} sortMethod - function to use for keys sort,\n *                                     or `null` to keep them as is\n * @returns {object} - initial state object\n */\nfunction state(list, sortMethod)\n{\n  var isNamedList = !Array.isArray(list)\n    , initState =\n    {\n      index    : 0,\n      keyedList: isNamedList || sortMethod ? Object.keys(list) : null,\n      jobs     : {},\n      results  : isNamedList ? {} : [],\n      size     : isNamedList ? Object.keys(list).length : list.length\n    }\n    ;\n\n  if (sortMethod)\n  {\n    // sort array keys based on it's values\n    // sort object's keys just on own merit\n    initState.keyedList.sort(isNamedList ? sortMethod : function(a, b)\n    {\n      return sortMethod(list[a], list[b]);\n    });\n  }\n\n  return initState;\n}\n"]}