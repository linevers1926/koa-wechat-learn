{"version":3,"sources":["terminator.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,QAAQ,YAAR,CAAZ;IACI,QAAQ,QAAQ,YAAR,CADZ;;;AAKA,OAAO,OAAP,GAAiB,UAAjB;;;;;;;;AAQA,SAAS,UAAT,CAAoB,QAApB,EACA;AACE,MAAI,CAAC,OAAO,IAAP,CAAY,KAAK,IAAjB,EAAuB,MAA5B,EACA;AACE;AACD;;;AAGD,OAAK,KAAL,GAAa,KAAK,IAAlB;;;AAGA,QAAM,IAAN;;;AAGA,QAAM,QAAN,EAAgB,IAAhB,EAAsB,KAAK,OAA3B;AACD","file":"terminator-compiled.js","sourcesContent":["var abort = require('./abort.js')\n  , async = require('./async.js')\n  ;\n\n// API\nmodule.exports = terminator;\n\n/**\n * Terminates jobs in the attached state context\n *\n * @this  AsyncKitState#\n * @param {function} callback - final callback to invoke after termination\n */\nfunction terminator(callback)\n{\n  if (!Object.keys(this.jobs).length)\n  {\n    return;\n  }\n\n  // fast forward iteration index\n  this.index = this.size;\n\n  // abort jobs\n  abort(this);\n\n  // send back results we have so far\n  async(callback)(null, this.results);\n}\n"]}