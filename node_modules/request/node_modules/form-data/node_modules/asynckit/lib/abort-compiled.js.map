{"version":3,"sources":["abort.js"],"names":[],"mappings":";AACA,OAAO,OAAP,GAAiB,KAAjB;;;;;;;AAOA,SAAS,KAAT,CAAe,KAAf,EACA;AACE,SAAO,IAAP,CAAY,MAAM,IAAlB,EAAwB,OAAxB,CAAgC,MAAM,IAAN,CAAW,KAAX,CAAhC;;;AAGA,QAAM,IAAN,GAAa,EAAb;AACD;;;;;;;;AAQD,SAAS,KAAT,CAAe,GAAf,EACA;AACE,MAAI,OAAO,KAAK,IAAL,CAAU,GAAV,CAAP,IAAyB,UAA7B,EACA;AACE,SAAK,IAAL,CAAU,GAAV;AACD;AACF","file":"abort-compiled.js","sourcesContent":["// API\nmodule.exports = abort;\n\n/**\n * Aborts leftover active jobs\n *\n * @param {object} state - current state object\n */\nfunction abort(state)\n{\n  Object.keys(state.jobs).forEach(clean.bind(state));\n\n  // reset leftover jobs\n  state.jobs = {};\n}\n\n/**\n * Cleans up leftover job by invoking abort function for the provided job id\n *\n * @this  state\n * @param {string|number} key - job id to abort\n */\nfunction clean(key)\n{\n  if (typeof this.jobs[key] == 'function')\n  {\n    this.jobs[key]();\n  }\n}\n"]}