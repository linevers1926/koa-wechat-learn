{"version":3,"sources":["form_data.js"],"names":[],"mappings":"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","file":"form_data-compiled.js","sourcesContent":["var CombinedStream = require('combined-stream');\nvar util = require('util');\nvar path = require('path');\nvar http = require('http');\nvar https = require('https');\nvar parseUrl = require('url').parse;\nvar fs = require('fs');\nvar mime = require('mime-types');\nvar asynckit = require('asynckit');\nvar populate = require('./populate.js');\n\n// Public API\nmodule.exports = FormData;\n\n// make it a Stream\nutil.inherits(FormData, CombinedStream);\n\n/**\n * Create readable \"multipart/form-data\" streams.\n * Can be used to submit forms\n * and file uploads to other web applications.\n *\n * @constructor\n */\nfunction FormData() {\n  if (!(this instanceof FormData)) {\n    return new FormData();\n  }\n\n  this._overheadLength = 0;\n  this._valueLength = 0;\n  this._valuesToMeasure = [];\n\n  CombinedStream.call(this);\n}\n\nFormData.LINE_BREAK = '\\r\\n';\nFormData.DEFAULT_CONTENT_TYPE = 'application/octet-stream';\n\nFormData.prototype.append = function(field, value, options) {\n\n  options = options || {};\n\n  // allow filename as single option\n  if (typeof options == 'string') {\n    options = {filename: options};\n  }\n\n  var append = CombinedStream.prototype.append.bind(this);\n\n  // all that streamy business can't handle numbers\n  if (typeof value == 'number') {\n    value = '' + value;\n  }\n\n  // https://github.com/felixge/node-form-data/issues/38\n  if (util.isArray(value)) {\n    // Please convert your array into string\n    // the way web server expects it\n    this._error(new Error('Arrays are not supported.'));\n    return;\n  }\n\n  var header = this._multiPartHeader(field, value, options);\n  var footer = this._multiPartFooter();\n\n  append(header);\n  append(value);\n  append(footer);\n\n  // pass along options.knownLength\n  this._trackLength(header, value, options);\n};\n\nFormData.prototype._trackLength = function(header, value, options) {\n  var valueLength = 0;\n\n  // used w/ getLengthSync(), when length is known.\n  // e.g. for streaming directly from a remote server,\n  // w/ a known file a size, and not wanting to wait for\n  // incoming file to finish to get its size.\n  if (options.knownLength != null) {\n    valueLength += +options.knownLength;\n  } else if (Buffer.isBuffer(value)) {\n    valueLength = value.length;\n  } else if (typeof value === 'string') {\n    valueLength = Buffer.byteLength(value);\n  }\n\n  this._valueLength += valueLength;\n\n  // @check why add CRLF? does this account for custom/multiple CRLFs?\n  this._overheadLength +=\n    Buffer.byteLength(header) +\n    FormData.LINE_BREAK.length;\n\n  // empty or either doesn't have path or not an http response\n  if (!value || ( !value.path && !(value.readable && value.hasOwnProperty('httpVersion')) )) {\n    return;\n  }\n\n  // no need to bother with the length\n  if (!options.knownLength) {\n    this._valuesToMeasure.push(value);\n  }\n};\n\nFormData.prototype._lengthRetriever = function(value, callback) {\n\n  if (value.hasOwnProperty('fd')) {\n\n    // take read range into a account\n    // `end` = Infinity –> read file till the end\n    //\n    // TODO: Looks like there is bug in Node fs.createReadStream\n    // it doesn't respect `end` options without `start` options\n    // Fix it when node fixes it.\n    // https://github.com/joyent/node/issues/7819\n    if (value.end != undefined && value.end != Infinity && value.start != undefined) {\n\n      // when end specified\n      // no need to calculate range\n      // inclusive, starts with 0\n      callback(null, value.end + 1 - (value.start ? value.start : 0));\n\n    // not that fast snoopy\n    } else {\n      // still need to fetch file size from fs\n      fs.stat(value.path, function(err, stat) {\n\n        var fileSize;\n\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        // update final size based on the range options\n        fileSize = stat.size - (value.start ? value.start : 0);\n        callback(null, fileSize);\n      });\n    }\n\n  // or http response\n  } else if (value.hasOwnProperty('httpVersion')) {\n    callback(null, +value.headers['content-length']);\n\n  // or request stream http://github.com/mikeal/request\n  } else if (value.hasOwnProperty('httpModule')) {\n    // wait till response come back\n    value.on('response', function(response) {\n      value.pause();\n      callback(null, +response.headers['content-length']);\n    });\n    value.resume();\n\n  // something else\n  } else {\n    callback('Unknown stream');\n  }\n};\n\nFormData.prototype._multiPartHeader = function(field, value, options) {\n  // custom header specified (as string)?\n  // it becomes responsible for boundary\n  // (e.g. to handle extra CRLFs on .NET servers)\n  if (typeof options.header == 'string') {\n    return options.header;\n  }\n\n  var contentDisposition = this._getContentDisposition(value, options);\n  var contentType = this._getContentType(value, options);\n\n  var contents = '';\n  var headers  = {\n    // add custom disposition as third element or keep it two elements if not\n    'Content-Disposition': ['form-data', 'name=\"' + field + '\"'].concat(contentDisposition || []),\n    // if no content type. allow it to be empty array\n    'Content-Type': [].concat(contentType || [])\n  };\n\n  // allow custom headers.\n  if (typeof options.header == 'object') {\n    populate(headers, options.header);\n  }\n\n  var header;\n  for (var prop in headers) {\n    header = headers[prop];\n\n    // skip nullish headers.\n    if (header == null) {\n      continue;\n    }\n\n    // convert all headers to arrays.\n    if (!Array.isArray(header)) {\n      header = [header];\n    }\n\n    // add non-empty headers.\n    if (header.length) {\n      contents += prop + ': ' + header.join('; ') + FormData.LINE_BREAK;\n    }\n  }\n\n  return '--' + this.getBoundary() + FormData.LINE_BREAK + contents + FormData.LINE_BREAK;\n};\n\nFormData.prototype._getContentDisposition = function(value, options) {\n\n  var contentDisposition;\n\n  // custom filename takes precedence\n  // fs- and request- streams have path property\n  // formidable and the browser add a name property.\n  var filename = options.filename || value.name || value.path;\n\n  // or try http response\n  if (!filename && value.readable && value.hasOwnProperty('httpVersion')) {\n    filename = value.client._httpMessage.path;\n  }\n\n  if (filename) {\n    contentDisposition = 'filename=\"' + path.basename(filename) + '\"';\n  }\n\n  return contentDisposition;\n};\n\nFormData.prototype._getContentType = function(value, options) {\n\n  // use custom content-type above all\n  var contentType = options.contentType;\n\n  // or try `name` from formidable, browser\n  if (!contentType && value.name) {\n    contentType = mime.lookup(value.name);\n  }\n\n  // or try `path` from fs-, request- streams\n  if (!contentType && value.path) {\n    contentType = mime.lookup(value.path);\n  }\n\n  // or if it's http-reponse\n  if (!contentType && value.readable && value.hasOwnProperty('httpVersion')) {\n    contentType = value.headers['content-type'];\n  }\n\n  // or guess it from the filename\n  if (!contentType && options.filename) {\n    contentType = mime.lookup(options.filename);\n  }\n\n  // fallback to the default content type if `value` is not simple value\n  if (!contentType && typeof value == 'object') {\n    contentType = FormData.DEFAULT_CONTENT_TYPE;\n  }\n\n  return contentType;\n};\n\nFormData.prototype._multiPartFooter = function() {\n  return function(next) {\n    var footer = FormData.LINE_BREAK;\n\n    var lastPart = (this._streams.length === 0);\n    if (lastPart) {\n      footer += this._lastBoundary();\n    }\n\n    next(footer);\n  }.bind(this);\n};\n\nFormData.prototype._lastBoundary = function() {\n  return '--' + this.getBoundary() + '--' + FormData.LINE_BREAK;\n};\n\nFormData.prototype.getHeaders = function(userHeaders) {\n  var header;\n  var formHeaders = {\n    'content-type': 'multipart/form-data; boundary=' + this.getBoundary()\n  };\n\n  for (header in userHeaders) {\n    if (userHeaders.hasOwnProperty(header)) {\n      formHeaders[header.toLowerCase()] = userHeaders[header];\n    }\n  }\n\n  return formHeaders;\n};\n\nFormData.prototype.getBoundary = function() {\n  if (!this._boundary) {\n    this._generateBoundary();\n  }\n\n  return this._boundary;\n};\n\nFormData.prototype._generateBoundary = function() {\n  // This generates a 50 character boundary similar to those used by Firefox.\n  // They are optimized for boyer-moore parsing.\n  var boundary = '--------------------------';\n  for (var i = 0; i < 24; i++) {\n    boundary += Math.floor(Math.random() * 10).toString(16);\n  }\n\n  this._boundary = boundary;\n};\n\n// Note: getLengthSync DOESN'T calculate streams length\n// As workaround one can calculate file size manually\n// and add it as knownLength option\nFormData.prototype.getLengthSync = function() {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  // Don't get confused, there are 3 \"internal\" streams for each keyval pair\n  // so it basically checks if there is any value added to the form\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  // https://github.com/form-data/form-data/issues/40\n  if (!this.hasKnownLength()) {\n    // Some async length retrievers are present\n    // therefore synchronous length calculation is false.\n    // Please use getLength(callback) to get proper length\n    this._error(new Error('Cannot calculate proper length in synchronous way.'));\n  }\n\n  return knownLength;\n};\n\n// Public API to check if length of added values is known\n// https://github.com/form-data/form-data/issues/196\n// https://github.com/form-data/form-data/issues/262\nFormData.prototype.hasKnownLength = function() {\n  var hasKnownLength = true;\n\n  if (this._valuesToMeasure.length) {\n    hasKnownLength = false;\n  }\n\n  return hasKnownLength;\n};\n\nFormData.prototype.getLength = function(cb) {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  if (!this._valuesToMeasure.length) {\n    process.nextTick(cb.bind(this, null, knownLength));\n    return;\n  }\n\n  asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function(err, values) {\n    if (err) {\n      cb(err);\n      return;\n    }\n\n    values.forEach(function(length) {\n      knownLength += length;\n    });\n\n    cb(null, knownLength);\n  });\n};\n\nFormData.prototype.submit = function(params, cb) {\n  var request\n    , options\n    , defaults = {method: 'post'}\n    ;\n\n  // parse provided url if it's string\n  // or treat it as options object\n  if (typeof params == 'string') {\n\n    params = parseUrl(params);\n    options = populate({\n      port: params.port,\n      path: params.pathname,\n      host: params.hostname\n    }, defaults);\n\n  // use custom params\n  } else {\n\n    options = populate(params, defaults);\n    // if no port provided use default one\n    if (!options.port) {\n      options.port = options.protocol == 'https:' ? 443 : 80;\n    }\n  }\n\n  // put that good code in getHeaders to some use\n  options.headers = this.getHeaders(params.headers);\n\n  // https if specified, fallback to http in any other case\n  if (options.protocol == 'https:') {\n    request = https.request(options);\n  } else {\n    request = http.request(options);\n  }\n\n  // get content length and fire away\n  this.getLength(function(err, length) {\n    if (err) {\n      this._error(err);\n      return;\n    }\n\n    // add content length\n    request.setHeader('Content-Length', length);\n\n    this.pipe(request);\n    if (cb) {\n      request.on('error', cb);\n      request.on('response', cb.bind(this, null));\n    }\n  }.bind(this));\n\n  return request;\n};\n\nFormData.prototype._error = function(err) {\n  if (!this.error) {\n    this.error = err;\n    this.pause();\n    this.emit('error', err);\n  }\n};\n"]}